{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Account Arrangements",
    "description" : "The Arrangement Architecture is a Temenos Transact Framework to create and manage  various products such as loans, deposits, accounts, etc. It provides a modular business component-based architecture, whereby users can create their products by using the components provided by Temenos and these components can be reused across multiple different products.This API can be used to create and manage various types of accounts such as current, savings, corporate, islamic, non-resident and minor accounts created using the Arrangement Architecture.",
    "version" : "v9.2.0"
  },
  "servers" : [ {
    "url" : "https://api.temenos.com/api/v9.2.0/"
  } ],
  "security" : [ {
    "apiKey" : [ ]
  } ],
  "tags" : [ {
    "name" : "RETAIL"
  }, {
    "name" : "ISLAMIC BANKING"
  }, {
    "name" : "OTHERS"
  } ],
  "paths" : {
    "/holdings/accounts" : {
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Allows creation of accounts",
        "description" : "Allows to create and manage various types of accounts such as current, savings, corporate, islamic, non-resident and minor accounts created using the Arrangement Architecture.  Pool accounts can also be created for Notional pooling purpose",
        "operationId" : "createSavingsAccount",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/SavingsAccount"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "createSavingsAccountResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SavingsAccountResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/holdings/accounts/currentAccounts" : {
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Create a current account",
        "description" : "Creates a current account with the details such as customer identifier, customer role,  account currency, etc.",
        "operationId" : "createCurrentAccounts",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CurrentAccounts"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "createCurrentAccountsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrentAccountsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/holdings/accounts/corporateAccounts" : {
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Create a corporate current account",
        "description" : "Creates a corporate current account with the details such as customer identifier, customer role,  account currency, etc.  The customer should be a valid corporate customer.",
        "operationId" : "createCorporateAccount",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CorporateAccount"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "createCorporateAccountResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CorporateAccountResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/holdings/accounts/mudarabaSavingAccounts" : {
      "post" : {
        "tags" : [ "ISLAMIC BANKING", "RETAIL" ],
        "summary" : "Create a mudaraba savings account",
        "description" : "Creates a mudarba savings account with the details such as customer identifier, customer role,  account currency, etc.",
        "operationId" : "createMudarabaSavingAccount",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/MudarabaSavingAccount"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "createMudarabaSavingAccountResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MudarabaSavingAccountResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/holdings/accounts/savingsAccounts" : {
      "post" : {
        "tags" : [ "OTHERS" ],
        "summary" : "Create a savings account",
        "description" : "Creates a savings account with the details such as customer identifier, customer role,  account currency, etc.",
        "operationId" : "createSavingAccount",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/SavingAccount"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "createSavingAccountResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SavingAccountResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/holdings/accounts/minorAccounts" : {
      "post" : {
        "tags" : [ "OTHERS" ],
        "summary" : "Create a minor savings account",
        "description" : "Creates a minor savings account (age below 18 years) with the details such as customer identifier, customer role,  account currency, etc.",
        "operationId" : "createMinorAccount",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/SavingAccount"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "createMinorAccountResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SavingAccountResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/holdings/accounts/nonResidentAccounts" : {
      "post" : {
        "tags" : [ "OTHERS" ],
        "summary" : "Creates a non resident savings account",
        "description" : "Creates a non-resident savings account with the details such as customer identifier, customer role,  account currency, etc.",
        "operationId" : "createNonResidentAccount",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/SavingAccount"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "createNonResidentAccountResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SavingAccountResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/holdings/accounts/{activityId}/reverseAccounts" : {
      "delete" : {
        "tags" : [ "OTHERS" ],
        "summary" : "Reverse or delete a current account",
        "description" : "Reverse or delete a current account-This API is deprecated and going forward the following URL has to be used.URL:/holdings/arrangementActivityId/{activityId}",
        "operationId" : "reverseAccounts",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "reverseAccountsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CorporateAccountResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      },
      "parameters" : [ {
        "name" : "activityId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/{arrangementId}/accountDetails" : {
      "get" : {
        "tags" : [ "OTHERS" ],
        "summary" : "Retrieves the details of an account",
        "description" : "Retrieves the details of an account-This API is deprecated and going forward the following URL has to be used.URL:/holdings/arrangements/{arrangementId}",
        "operationId" : "getAccountArrangementDetails",
        "parameters" : [ {
          "name" : "arrangementId",
          "in" : "path",
          "description" : "Indicates an unique identifier of an account",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "AccountArrangementDetailsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountArrangementDetailsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/holdings/accounts/{accountId}/statements/dates" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the previously generated statement details for the given account",
        "description" : "Retrieves the previously generated statement details for the given account such as statement date, frequency, detailed statement and lead or participant account",
        "operationId" : "getPastStatements",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customer",
          "in" : "query",
          "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "carrierAddressId",
          "in" : "query",
          "description" : "Specifies the Carrier by which the message was received",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "PastStatementsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PastStatementsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/holdings/accounts/{accountId}/statements/forwardEntries" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the details of future transaction entries",
        "description" : "Retrieves the details of future transaction entries such as statement reference, value date, booking date, transaction reference, transaction code and amount",
        "operationId" : "getForwardEntries",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "valueDate",
          "in" : "query",
          "description" : "Indicates the value date on which the underlying accounting entry is to be given value (for interest purposes)",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "longPositionSign",
          "in" : "query",
          "description" : "Polarity (sign) used to denote buy position balance.  ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "ForwardEntriesResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForwardEntriesResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/holdings/accounts/{accountId}/statements" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the statement details for the given account",
        "description" : "Retrieves the statement details of the transactions for the given account such as booking date, value date, transaction reference, transaction code, debit or credit amount, closing balance based on the given dates(from date and to date).If dates are not given, retrieves the last 1M transactions.If from date alone is given, retrieves the transactions from given date to today.If end date alone is given, retrieves the last 1M transactions prior to the given end date.If period is given, retrieves the transactions for the period.If account id and transaction id are given, retrieves that particular transaction details",
        "operationId" : "getAccountStatement",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fromDate",
          "in" : "query",
          "description" : "Indicates the business date from when the balance reservation event is active.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "toDate",
          "in" : "query",
          "description" : "Indicates the business date until when the balance reservation event is active.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "transactionReference",
          "in" : "query",
          "description" : "Contains the identifier for the transaction in the core system",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "period",
          "in" : "query",
          "description" : "Indicates spread of time buckets.Ex: 3M,6M,9M,10Y etc.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "AccountStatementResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountStatementResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Update the statement frequency of an account",
        "description" : "Update the statement frequency of an account.",
        "operationId" : "updateAccountStatement",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountStatement"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "updateAccountStatementResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountStatementResponse1"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/holdings/accounts/savingsAccounts/{savingsAccountId}/payoffCalculations" : {
      "put" : {
        "tags" : [ "OTHERS" ],
        "summary" : "Calculate the outstanding amount to close the savings account",
        "description" : "Calculate the payoff amount for the savings account which includes the outstanding amounts and also amounts such as account balances, interest, and charge amounts",
        "operationId" : "calculatePayoffSavingsAccounts",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/PayoffSavingsAccounts"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "calculatePayoffSavingsAccountsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PayoffSavingsAccountsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "savingsAccountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/savingsAccounts/{savingsAccountId}/payoffs" : {
      "put" : {
        "tags" : [ "OTHERS" ],
        "summary" : "Perform the settlement of payoff amount for the savings account",
        "description" : "Perform the settlement of payoff amount for the savings account by providing the transaction amount, currency and also settlement instructions",
        "operationId" : "updatePayoffSavingsAccounts",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/PayoffSavingsAccounts1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "updatePayoffSavingsAccountsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PayoffSavingsAccountsResponse1"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "savingsAccountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/currentAccounts/{currentAccountId}/payoffCalculations" : {
      "put" : {
        "tags" : [ "OTHERS" ],
        "summary" : "Calculate the outstanding amount to close the current account",
        "description" : "Calculate the payoff amount for the current account which includes the outstanding amounts and also amounts such as account balances, interest, and charge amounts",
        "operationId" : "calculatePayoffCurrentAccounts",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/PayoffCurrentAccounts"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "calculatePayoffCurrentAccountsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PayoffCurrentAccountsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "currentAccountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/currentAccounts/{currentAccountId}/payoffs" : {
      "put" : {
        "tags" : [ "OTHERS" ],
        "summary" : "Perform the settlement of payoff amount for the current account",
        "description" : "Perform the settlement of payoff amount for the current account by providing the transaction amount, currency and also settlement instructions",
        "operationId" : "updatePayoffCurrentAccounts",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/PayoffCurrentAccounts1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "updatePayoffCurrentAccountsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PayoffCurrentAccountsResponse1"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "currentAccountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/currentAccounts/{currentAccountId}/accountClosures" : {
      "put" : {
        "tags" : [ "OTHERS" ],
        "summary" : "Perform the closure of the current account after settlement of payoff amount",
        "description" : "Perform the closure of the current account after settlement of payoff amount. The account moves to closed status based on the closure conditions defined in the system",
        "operationId" : "deleteCurrentAccounts",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CurrentAccounts1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "deleteCurrentAccountsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurrentAccountsResponse1"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "currentAccountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/savingsAccounts/{savingsAccountId}/accountClosures" : {
      "put" : {
        "tags" : [ "OTHERS" ],
        "summary" : "Perform the closure of the savings account after settlement of payoff amount",
        "description" : "Perform the closure of the savings account after settlement of payoff amount. The account moves to closed status based on the closure conditions defined in the system",
        "operationId" : "deleteSavingsAccounts",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/SavingsAccounts"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "deleteSavingsAccountsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SavingsAccountsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "savingsAccountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/simulations" : {
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Create simulation for account products",
        "description" : "Creates a simulation for account product with the details such as customer identifier, account currency, etc.",
        "operationId" : "createAccountSimulation",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountSimulation"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "createAccountSimulationResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountSimulationResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/holdings/accounts/simulations/{simulationId}" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Amend simulation for account products",
        "description" : "Amend a simulation for account product with the details such as customer identifier, account currency, etc.",
        "operationId" : "updateAccountSimulation",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountSimulation1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "updateAccountSimulationResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountSimulationResponse1"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "simulationId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/arrangements/{arrangementId}/activities" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Update an accounts arrangement",
        "description" : "Update an accounts arrangement",
        "operationId" : "createAccountsArrangements",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountsArrangements"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "createAccountsArrangementsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountsArrangementsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "arrangementId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/{accountId}/interests" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Update the debit interest conditions of an account",
        "description" : "Update the debit interest conditions of the account such as interest rate, tier details, margin amount etc.",
        "operationId" : "updateAccountInterestCondition",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountInterestCondition"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "updateAccountInterestConditionResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountInterestConditionResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "accountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/{accountId}/facilities" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the service availability for an account",
        "description" : "Retrieves the service availability for an account like block or unblock of cheque,card,sweep etc.,",
        "operationId" : "getAccountfacilities",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "AccountfacilitiesResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountfacilitiesResponse1"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Update the service availability for an account",
        "description" : "Update the service availability for an account like block or unblock of cheque,card,sweep etc.,",
        "operationId" : "updateAccountfacilities",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Accountfacilities"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "updateAccountfacilitiesResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountfacilitiesResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "accountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/businessAccounts" : {
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Creates a business banking account for a single or joint customer",
        "description" : "Creates a business banking account for a single customer or more than one customer(like a joint account relationship) with the customer identifier, customer role, account currency details",
        "operationId" : "createBusinessAccount",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/BusinessAccount"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "createBusinessAccountResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessAccountResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/holdings/accounts/{accountId}" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves account details",
        "description" : "Retrieves the account specific information for internet banking users",
        "operationId" : "getAccountDetails",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "AccountDetailsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountDetailsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/holdings/accounts/{accountId}/products" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Change of contract from one account product to another",
        "description" : "Change account from one product to another such as changing savings account to current account",
        "operationId" : "updateAccountProduct",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountProduct"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "updateAccountProductResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountProductResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "accountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/{accountId}/limits" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Update the limit conditions of the account",
        "description" : "Update the limit conditions of the account with the secondary limit amount and other limit details",
        "operationId" : "updateAccountLimit",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountLimit"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "updateAccountLimitResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountLimitResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "accountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/{accountId}/interestConditions" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Update the interest conditions of the account",
        "description" : "Update the interest conditions of the account such as interest rate, tier details, margin amount etc.",
        "operationId" : "updateAccountInterestConditions",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountInterestConditions"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "updateAccountInterestConditionsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountInterestConditionsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "accountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/{accountId}/dormancyStatus/{status}" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Deactivates the savings account to given status",
        "description" : "Deactivates the savings account and moves it to given dormancy status.",
        "operationId" : "updateAccountDormancyStatus",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountDormancyStatus"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "updateAccountDormancyStatusResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountDormancyStatusResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "accountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      }, {
        "name" : "status",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/{accountId}/channels" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Change of channel for the account",
        "description" : "Updates the channel of the account",
        "operationId" : "updateAccountChannel",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountChannel"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "updateAccountChannelResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountChannelResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "accountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/migrations" : {
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Migration of legacy system account contract to the given account product",
        "description" : "Migration of a legacy system account contract to the given account product by providing the original contract date, account name, statement, payment frequency and start date, etc. ",
        "operationId" : "initiateAccountMigration",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountMigration"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "initiateAccountMigrationResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountMigrationResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      }
    },
    "/holdings/accounts/{accountId}/migrations/balances" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Captures outstanding balance details of a contract migrated from legacy system",
        "description" : "Captures the balance details of the account such as balance type, due amount etc. This is used to migrate the balances of a legacy contract which is migrated from other system & update the balance details",
        "operationId" : "updateAccountBalanceMigration",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountBalanceMigration"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "updateAccountBalanceMigrationResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountBalanceMigrationResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "accountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/{accountId}/renegotiations" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Renegotiation of the account contract details",
        "description" : "Perform the renegotiation of the account contract details such as payment frequency, payment start date, interest rate, statement frequency and settlement details, etc.",
        "operationId" : "updateAccountConditions",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountConditions"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "updateAccountConditionsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountConditionsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "accountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/{accountId}/dormancyStatus/reactivations" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Reset the account dormancy status",
        "description" : "Reset the dormant account to active status manually",
        "operationId" : "updateAccountDormancyReactivation",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountDormancyReactivation"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "updateAccountDormancyReactivationResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountDormancyReactivationResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "accountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/{accountId}/withdrawalNotices" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Notifies the withdrawal amount from account",
        "description" : "Notifies the withdrawal of amount from account by providing the withdrawal date and amount etc. This is applicable only for notice type of accounts.",
        "operationId" : "createAccountWithdrawalNotice",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountWithdrawalNotice"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "createAccountWithdrawalNoticeResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountWithdrawalNoticeResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "accountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/{accountId}/customers" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Update customers for the given account",
        "description" : "Update the customer details of the account such as add or remove the joint customers, tax liability percentange, limit liability percentage of the joint customers",
        "operationId" : "updateAccountCustomer",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountCustomer"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "updateAccountCustomerResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountCustomerResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "accountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/{accountId}/credits" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Perform credit transaction in an account.",
        "description" : "Perform credit transactions in an account, providing the credit amount and the currency in which to be credited",
        "operationId" : "updateAccountCredit",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountCredit"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "updateAccountCreditResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountCreditResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "accountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/{accountId}/debits" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Perform debit transactions in an account",
        "description" : "Perform debit transactions in an account by providing debit amount and currency in which to be debited",
        "operationId" : "updateAccountDebit",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountDebit"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "updateAccountDebitResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountDebitResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "accountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/{accountId}/adjustments" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Performs backdated adjustment and re-accrual for the given savings account ",
        "description" : "Performs backdated adjustment and re-accrual for the given savings account.  This is used when interest adjustment is required due to backdated rate change or transaction.",
        "operationId" : "updateAccountAdjustment",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountAdjustment"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "updateAccountAdjustmentResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountAdjustmentResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "accountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/{accountId}/lineofBusiness" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Change of line of business for the account",
        "description" : "Updates the type of line of business of the account",
        "operationId" : "updateAccountLob",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountLob"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "updateAccountLobResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountLobResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "accountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/{accountId}/dormancyConditions" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves the account dormancy conditions",
        "description" : "Retrieves the dormancy setup details for the account such as dormancy period, status etc",
        "operationId" : "getAccountDormancyDetails",
        "parameters" : [ {
          "name" : "accountId",
          "in" : "path",
          "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "AccountDormancyDetailsResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountDormancyDetailsResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/holdings/accounts/{accountId}/migrations/bills" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Captures the bill information of the account such as bill id, property names, bill amount etc. This is used to migrate the bills of a legacy contract which is migrated from other system & update the bill details",
        "description" : "Captures the bill information of the account such as bill id, property names, bill amount etc. This is used to migrate the bills of a legacy contract which is migrated from other system & update the bill details",
        "operationId" : "updateAccountBillMigration",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountBillMigration"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "updateAccountBillMigrationResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountBillMigrationResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "accountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/{accountId}/branches" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Updates the branch of an account",
        "description" : "Updates the branch of an account",
        "operationId" : "updateAccountBranch",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountBranch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "updateAccountBranchResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountBranchResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "accountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/{accountId}/settlements" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Update the settlement conditions of the account such as payin account, payin percentage, payin amount, payout account, payout percentage, payout amount, etc",
        "description" : "Update the settlement conditions of the account such as payin account, payin percentage, payin amount, payout account, payout percentage, payout amount, etc",
        "operationId" : "updateAccountSettlement",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountSettlement"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "updateAccountSettlementResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountSettlementResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "accountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/{accountId}/accounts" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Update the account's details",
        "description" : "Update the account details to block or unblock the account by setting the posting restriction and to change the nick name of the account",
        "operationId" : "updateAccount",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Account"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "updateAccountResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "accountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/{accountId}/schedules" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Update payment schedule for the given account",
        "description" : "Update the payment schedule condition such as payment method from capitalise to pay, payment frequency from monthly to quarterly etc., on an account",
        "operationId" : "updateAccountSchedule",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountSchedule"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "updateAccountScheduleResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountScheduleResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "accountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/{accountId}/withdrawalNotices/cancellations" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Cancels the notification of withdrawal of amount from account",
        "description" : "Cancels the notification of withdrawal of amount from account.",
        "operationId" : "cancelAccountWithdrawalNotice",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountWithdrawalNotice1"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "cancelAccountWithdrawalNoticeResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountWithdrawalNoticeResponse1"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "accountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/{accountId}/withdrawalNotices/noticeUpdates" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Updates the notice of withdrawal of amount from account",
        "description" : "Updates the notice of withdrawal of amount from  account by providing the withdrawal date, bill reference and amount etc. This is applicable only for notice type of accounts.",
        "operationId" : "updateAccountWithdrawalNotice",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountWithdrawalNotice2"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "updateAccountWithdrawalNoticeResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountWithdrawalNoticeResponse2"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "accountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/{accountId}/payouts" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Perform payout of an account",
        "description" : "Performs payout of the given account amount such as charges, tax etc",
        "operationId" : "initiateAccountPayout",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountPayout"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "initiateAccountPayoutResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountPayoutResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "accountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/{accountId}/repayments" : {
      "put" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Perform repayment of the given account",
        "description" : "Repays the account amount such as charges, tax etc",
        "operationId" : "initiateAccountPayin",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountPayout"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "initiateAccountPayinResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountPayoutResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "accountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/{accountId}/autoSimulations/payoffs" : {
      "post" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Create auto simulation payoff activity for account products",
        "description" : "Create auto simulation payoff activity for account product with product id details",
        "operationId" : "createAccountPayoffAutoSimulation",
        "parameters" : [ {
          "name" : "validate_only",
          "in" : "query",
          "description" : "The identifier to indicate if it is set to only validate or not.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountPayoffAutoSimulation"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "createAccountPayoffAutoSimulationResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountPayoffAutoSimulationResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "ArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArrangementErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessArrangementErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemArrangementErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemArrangementErrorResponse"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name" : "payload"
      },
      "parameters" : [ {
        "name" : "accountId",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/holdings/accounts/accountsDetails" : {
      "get" : {
        "tags" : [ "RETAIL" ],
        "summary" : "Retrieves list of account basic details",
        "description" : "Retrieves the currency, balances, limit details and arrangement details of the account",
        "operationId" : "getAccountInfo",
        "parameters" : [ {
          "name" : "customer",
          "in" : "query",
          "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "arrangementId",
          "in" : "query",
          "description" : "Indicates an unique identifier of an account",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "currency",
          "in" : "query",
          "description" : "Identifies the currency. E.g. USD, GBP etc",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyCode",
          "in" : "query",
          "description" : "The identifier of the underlying Entity/Company/Branch.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "query",
          "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Specifies the status of the agreement with following options, UNAUTH - input but not authorised, AUTH - authorised and LIVE, CURRENT - disbursement initiated, EXPIRED - past final payment date with pending dues, REVERSED - reversed, CLOSE - closed, PENDING.CLOSURE - ready for closure",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accountId",
          "in" : "query",
          "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The total number of records per page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page_start",
          "in" : "query",
          "description" : "The record from which the response should be displayed",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "page_token",
          "in" : "query",
          "description" : "Unique id expected to get as part of response from Transact on every enquiry request",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentials",
          "in" : "header",
          "description" : "Username and password to authenticate the API against core-banking.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "companyId",
          "in" : "header",
          "description" : "Identifier of the lead company of the underlying Entity/Company/Branch for the respective contract for customer data protection purposes. Example US0010001.",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceId",
          "in" : "header",
          "description" : "Identifies the device type",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userRole",
          "in" : "header",
          "description" : "User who initiated the transaction",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "channelName",
          "in" : "header",
          "description" : "Name of the (digital) channel registered by the Customer",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "disablePagination",
          "in" : "header",
          "description" : "Indicates the pagination header attributes availability. If set to 'true', it fetches all the data",
          "required" : false,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "AccountInfoResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountInfoResponse"
                }
              }
            }
          },
          "default" : {
            "description" : "QueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueryErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "BusinessQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BusinessQueryErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "SystemQueryErrorResponse",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemQueryErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "MudarabaSavingAccount" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/MudarabaSavingAccountBody"
          }
        },
        "description" : "MudarabaSavingAccount"
      },
      "ErrorHeader" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Status of the API(success/failed)"
          },
          "audit" : {
            "$ref" : "#/components/schemas/ArrangementHeaderAudit"
          }
        }
      },
      "SavingsAccountsBody" : {
        "type" : "object",
        "properties" : {
          "currencyId" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency."
          },
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "activityId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "transactionAmount" : {
            "maximum" : 19,
            "minimum" : 0,
            "type" : "number",
            "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency"
          },
          "contractId" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the unique identifier of the transaction or contract which initiated the activity"
          },
          "systemId" : {
            "maxLength" : 6,
            "minLength" : 0,
            "type" : "string",
            "description" : "System ID of the originating transaction"
          },
          "externalEventStatus" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Determines the status of events sent to external system from the current system for the given activity"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountMigrationResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/AccountMigrationResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/AccountMigrationResponseBodyProperties"
          }
        }
      },
      "PayloadHeaderAudit" : {
        "type" : "object",
        "properties" : {
          "versionNumber" : {
            "type" : "string",
            "description" : "The CURR.NO. of the record"
          }
        }
      },
      "AccountStatementResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AccountStatementResponseBodyInner"
        }
      },
      "SavingsAccountBodyPayment" : {
        "type" : "object",
        "properties" : {
          "paymentType" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type"
          },
          "paymentMethod" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Method chosen to make the payment"
          },
          "paymentFrequency" : {
            "maxLength" : 38,
            "minLength" : 0,
            "type" : "string",
            "description" : "The frequency at which a payment is required to be generated"
          },
          "progPercentage" : {
            "maxLength" : 12,
            "minLength" : 0,
            "type" : "string",
            "description" : "Used to specify the progressive percentage with which the system calculated payment amount has to progress on every payment"
          },
          "billType" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "The type of payment obligation generated"
          },
          "billLeadDays" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "If Bill is to be produced ahead of the due date, then the number of lead days is specified here. Accepted format is ND, where N is the number of days"
          },
          "finaliseBill" : {
            "maxLength" : 4,
            "minLength" : 0,
            "type" : "string",
            "description" : "Defines the number of days prior to the actual payment, when a bill needs to be finalised. This allows the user or customer to make amendments to an issued bill through the Payment Holiday activity with as many number of times, between the issue date and finalisation date. When zero days is defined, then user or customer will be allowed to make amendments to an issued bill through Payment Holiday activity until the payment date"
          },
          "issueBill" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Flag to indicate whether we need to issue bill and make it due separately or together. If the field is set to NO, then both would be combined and performed as a single activity"
          },
          "deferPeriod" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Period that defines how long the scheduled payment should be deferred from original cycled date. If defined, then on the cycled date, system will schedule deferring makedue or deferring capitalise activities moving the bills to defer status. On actual cycled date plus Defer Period, system will schedule make due or capitalise activities where bills will be moved out from defer status to their respective status"
          },
          "property" : {
            "type" : "array",
            "description" : "Id of the product property",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyProperty"
            }
          },
          "payments" : {
            "type" : "array",
            "description" : "Indicates the initiation of payment for an account",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyPayments"
            }
          }
        }
      },
      "AccountfacilitiesResponse1Body" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AccountfacilitiesResponse1BodyInner"
        }
      },
      "AccountProductResponseBodyArrangementActivity" : {
        "type" : "object",
        "properties" : {
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountProductBodyBalance" : {
        "type" : "object",
        "properties" : {
          "accountTypes" : {
            "type" : "array",
            "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,.",
            "items" : {
              "$ref" : "#/components/schemas/AccountProductBodyAccountTypes"
            }
          },
          "accountNames" : {
            "type" : "array",
            "description" : "Display name or short name of the account specified.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyShortTitles"
            }
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountSimulationResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountSimulationResponseBody"
          }
        },
        "description" : "AccountSimulationResponse"
      },
      "AccountDormancyDetailsResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "dormancyStatuses" : {
            "type" : "array",
            "description" : "Indicates the Dormancy status",
            "items" : {
              "type" : "object",
              "properties" : {
                "dormancyStatus" : {
                  "type" : "string",
                  "description" : "Specifies the operative status of the acount like inactive, dormant,unclaimed etc.,"
                },
                "period" : {
                  "maxLength" : 4,
                  "type" : "string",
                  "description" : "Indicates spread of time buckets.Ex: 3M,6M,9M,10Y etc."
                },
                "charge" : {
                  "type" : "string",
                  "description" : "The charges or fees for this transaction"
                },
                "chargeFrequency" : {
                  "maxLength" : 20,
                  "type" : "string",
                  "description" : "Indicates the frequency in which the periodic charges are posted. Allowed values are for example, 20091223DAILY. It is mandatory when the charge frequency is set as periodic."
                }
              }
            }
          },
          "arrangementId" : {
            "maxLength" : 30,
            "type" : "string",
            "description" : "Indicates an unique identifier of an account"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          }
        }
      },
      "AccountsArrangementsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountsArrangementsResponseBody"
          }
        },
        "description" : "AccountsArrangementsResponse"
      },
      "AccountPayoffAutoSimulation" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountPayoffAutoSimulationBody"
          }
        },
        "description" : "AccountPayoffAutoSimulation"
      },
      "AccountArrangementDetailsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountArrangementDetailsResponseBody"
          }
        },
        "description" : "AccountArrangementDetailsResponse"
      },
      "AccountInterestConditionResponseBodyProperties" : {
        "type" : "object",
        "properties" : {
          "crinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesCrinterest"
          },
          "drinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesCrinterest"
          }
        }
      },
      "PayoffSavingsAccounts1BodySettlement" : {
        "type" : "object",
        "properties" : {
          "repayment" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccounts1BodyRepayment"
            }
          },
          "payout" : {
            "type" : "array",
            "description" : "Details of the concentration account to which the surplus funds available in the sweeping account is paid out to.",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccounts1BodyPayout"
            }
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "CorporateAccountBodyBalance" : {
        "type" : "object",
        "properties" : {
          "postingRestriction" : {
            "maxLength" : 4,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies any restrictions for posting entries that are to be imposed on the Account"
          },
          "restrictionReason" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Sets restrictions on the actions that can be performed on an account. Allowed values can be retrieved through method getEbLookup, virtualTableName BLOCK.REASON.CODES. "
          },
          "restrictionText" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Free text information to capture the reason for restriction applied on an account"
          },
          "startDate" : {
            "type" : "string",
            "description" : "Contains the date on which the transaction or payment gets initiated.",
            "format" : "date"
          },
          "expiryDate" : {
            "type" : "string",
            "description" : "This indicates the  date  on which the offer or privilege terminates for the event.",
            "format" : "date"
          },
          "unrestrictionReason" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Captures the code that removes the restriction set on an account.  Allowed values can be retrieved through method getEbLookup, virtualTableName UNBLOCK.REASON.CODES."
          },
          "unrestrictionText" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Reason for unblocking the restriction set on an account"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "PayoffSavingsAccountsBodyOverrides" : {
        "type" : "object",
        "properties" : {
          "override" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database."
          }
        }
      },
      "CorporateAccountBody" : {
        "type" : "object",
        "properties" : {
          "partyIds" : {
            "type" : "array",
            "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyPartyIds"
            }
          },
          "partyRoles" : {
            "type" : "array",
            "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyPartyRoles"
            }
          },
          "agentCustomerIds" : {
            "type" : "array",
            "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAgentCustomerIds"
            }
          },
          "agentArrangementIds" : {
            "type" : "array",
            "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAgentArrangementIds"
            }
          },
          "agentRoles" : {
            "type" : "array",
            "description" : "The role of the 3rd party, select from standard list",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAgentRoles"
            }
          },
          "arrangmentId" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates an unique identifier of an account"
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "activityId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "currency" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the currency. E.g. USD, GBP etc"
          },
          "productVariation" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer"
          },
          "pricingSelection" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing."
          },
          "pricingPlan" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment"
          },
          "rewardsArrangementId" : {
            "maxLength" : 17,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)"
          },
          "tradeDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Standard date field which records trade date of the account"
          },
          "arrangementEffectiveDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "It is a date on/upon which an account is considered to take effect"
          },
          "reason" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the reason for performing the current activity"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "balance" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CorporateAccountBodyBalance"
            }
          }
        }
      },
      "PayoffSavingsAccountsBodyProperties" : {
        "type" : "object",
        "properties" : {
          "propertyId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "The identifier of the product condition"
          },
          "fields" : {
            "type" : "array",
            "description" : "Input is the valid field name for the metrics evaluation of alerts",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyFields"
            }
          }
        }
      },
      "SavingsAccountBodyOffsetProperties" : {
        "type" : "object",
        "properties" : {
          "offsetPropertyClass" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the property class which needs to be used for settlement offset"
          },
          "offsetProperty" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the property which needs to be used for settlement offset"
          }
        }
      },
      "AccountConditions" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountConditionsBody"
          }
        },
        "description" : "AccountConditions"
      },
      "SavingsAccountBodyPropertyClass" : {
        "type" : "object",
        "properties" : {
          "payOutPropertyClass" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed"
          }
        }
      },
      "AccountAdjustmentResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/PayoffSavingsAccountsResponse1BodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "AccountPayoffAutoSimulationResponseBodyPropertiesPayoff" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesLimitHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountPayoffAutoSimulationBodyPayoff"
          }
        }
      },
      "AccountScheduleBody" : {
        "type" : "object",
        "properties" : {
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "schedule" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodySchedule"
            }
          }
        }
      },
      "SavingsAccountBodyPaymentTypes" : {
        "type" : "object",
        "properties" : {
          "paymentType" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type"
          }
        }
      },
      "CurrentAccountsResponseBodyProperties" : {
        "type" : "object",
        "properties" : {
          "reporting" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xisa" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xrateSetup" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xtxlimit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xisPoolid" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xira" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "balance" : {
            "$ref" : "#/components/schemas/CurrentAccountsResponseBodyPropertiesBalance"
          },
          "messaging" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "activityCharges" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "agentCommission" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "rewardsPoints" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "alerts" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "highestdebit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "chequewd" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "minbalfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "noofcredits" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "noofdebits" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "turnovercredit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "turnoverdebit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "bonus" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "investcredit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "achcreditfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "achdebitfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "atmdebitfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "atmposfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "wirefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "overdraft" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "odnotification" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "withdrawalfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "packagefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "closurefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "accharge" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "dormancyfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "mgmtfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "cardissuefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "commitmentfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "setupfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "subscriptionfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "inhcommitment" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "limitfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "payfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "returnfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "nsfreversalfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "cashback" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "adminfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "servicefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "periodiccharges" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "customer" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "crinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "drinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "penalint" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "bundleinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "infcrinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "infdrinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "inhcrinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "inhdrinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "inhpenalint" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "utllimitfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "ovdlimitfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "bundlecrinterst" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "bundledrinterst" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "internalintdr" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "internalintdr2" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "internalintcr" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "internalintcr2" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "limit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "officers" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "schedule" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "inhSchedule" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "arrangementRules" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "renewal" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "tax" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "balanceAvailability" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "settlement" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "payoff" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "dormancy" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "facility" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "statement" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "inheritanceSource" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "inheritanceTarget" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "constraint" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "prefpricing" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          }
        }
      },
      "PayoffSavingsAccountsBodyCustomerIds" : {
        "type" : "object",
        "properties" : {
          "customerId" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the customer"
          },
          "customerRole" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates role of a customer for an arrangement."
          }
        }
      },
      "AccountLimitResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/AccountProductResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/AccountLimitResponseBodyProperties"
          }
        }
      },
      "AccountBillMigrationResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountBillMigrationResponseBody"
          }
        },
        "description" : "AccountBillMigrationResponse"
      },
      "AccountStatementResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/AccountStatementResponseQueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountStatementResponseBody"
          }
        },
        "description" : "AccountStatementResponse"
      },
      "AccountWithdrawalNotice" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountWithdrawalNoticeBody"
          }
        },
        "description" : "AccountWithdrawalNotice"
      },
      "AccountPayoffAutoSimulationBodyPayoff" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "array",
            "description" : "This is the payment amount",
            "items" : {
              "$ref" : "#/components/schemas/AccountPayoffAutoSimulationBodyAmount"
            }
          },
          "expiryDays" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the period within which the locked rate needs to be availed."
          },
          "settleDues" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies if the amounts made due to the customer between the simulation start date and payoff effective date, should be considered settled or not. By setting this field to YES, auto settlement of future dues would be enabled and setting it to null or NO will not settle the due amounts automatically"
          },
          "percentage" : {
            "maxLength" : 12,
            "minLength" : 0,
            "type" : "string",
            "description" : "Percentage of holdings that can be pledged as collateral"
          },
          "action" : {
            "maxLength" : 9,
            "minLength" : 0,
            "type" : "string",
            "description" : "Refers to view or cancel options."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountStatementResponseQueryHeaderData" : {
        "type" : "object",
        "properties" : {
          "accountTitle" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Short title on an account"
          },
          "accountTitle2" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Title line 2 that will appear in notice and statements"
          },
          "addressLine1" : {
            "type" : "string",
            "description" : "Indicates first line of the address of the BIC"
          },
          "addressLine2" : {
            "maxLength" : 30,
            "type" : "string",
            "description" : "Indicates second line of the address of the BIC"
          },
          "street" : {
            "type" : "string",
            "description" : "Contains the street name of the customer or the property"
          },
          "townCountry" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "The town and country associated with the address"
          },
          "postCode" : {
            "maxLength" : 25,
            "type" : "string",
            "description" : "Identifies the address postal code for the customer or the property"
          },
          "country" : {
            "maxLength" : 25,
            "type" : "string",
            "description" : "Identifies the country of the customer or a property or organization"
          },
          "accountNumber" : {
            "maxLength" : 19,
            "type" : "string",
            "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
          },
          "accountType" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,."
          },
          "currency" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Identifies the currency. E.g. USD, GBP etc"
          },
          "todayDate" : {
            "maxLength" : 11,
            "type" : "string",
            "description" : "Date of the current business day for all online activities in the selected Company. This field is updated automatically with the date from 'nextWorkingDay' during the Close of Business processing."
          },
          "jointHolderId" : {
            "maxLength" : 350,
            "type" : "string",
            "description" : "The identifier of the joint holder"
          },
          "startDate" : {
            "type" : "string",
            "description" : "Contains the date on which the transaction or payment gets initiated."
          },
          "endDate" : {
            "type" : "string",
            "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned"
          },
          "openingBalance" : {
            "maxLength" : 19,
            "type" : "string",
            "description" : "Balance brought forward from the previous date/period."
          },
          "totalDebits" : {
            "maxLength" : 19,
            "type" : "string",
            "description" : "Contains the total number of debits"
          },
          "totalCredits" : {
            "maxLength" : 19,
            "type" : "string",
            "description" : "Contains the total number of credits"
          },
          "totalAmount" : {
            "maxLength" : 19,
            "type" : "string",
            "description" : "Total amount"
          }
        }
      },
      "AccountDebitBody" : {
        "type" : "object",
        "properties" : {
          "currencyId" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency."
          },
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "activityId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "transactionAmount" : {
            "maximum" : 19,
            "minimum" : 0,
            "type" : "number",
            "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency"
          },
          "contractId" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the unique identifier of the transaction or contract which initiated the activity"
          },
          "systemId" : {
            "maxLength" : 6,
            "minLength" : 0,
            "type" : "string",
            "description" : "System ID of the originating transaction"
          },
          "externalEventStatus" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Determines the status of events sent to external system from the current system for the given activity"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/AccountProductResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/AccountResponseBodyProperties"
          }
        }
      },
      "SavingsAccountBodyMinimumPayments" : {
        "type" : "object",
        "properties" : {
          "minimumPaymentBillType" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specify the bill type for which minimum payment amount must be made due or capitalised"
          },
          "minimumPaymentAmount" : {
            "maxLength" : 18,
            "minLength" : 0,
            "type" : "string",
            "description" : "minimum amount that needs to be made due or capitalised for the associated bill type"
          },
          "properties" : {
            "type" : "array",
            "description" : "Id of the product property",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyProperties"
            }
          }
        }
      },
      "ForwardEntriesResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "bookingDate" : {
            "maxLength" : 11,
            "type" : "string",
            "description" : "Indicates the date on which this business activity is booked in the underlying system. The effective date and booking date could be different if systems allow forward/back dated business transactions. Dates are expected in YYYYMMDD format. If booking date is not passed, effective date would be assumed as booking date."
          },
          "transactionReference" : {
            "maxLength" : 25,
            "type" : "string",
            "description" : "Contains the identifier for the transaction in the core system"
          },
          "narrative" : {
            "maxLength" : 60,
            "type" : "string",
            "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference"
          },
          "valueDate" : {
            "maxLength" : 20,
            "type" : "string",
            "description" : "Indicates the value date on which the underlying accounting entry is to be given value (for interest purposes)"
          },
          "transactionAmount" : {
            "maximum" : 16,
            "type" : "number",
            "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          }
        }
      },
      "AccountsArrangementsResponseBodyArrangementActivity" : {
        "type" : "object",
        "properties" : {
          "customerIds" : {
            "type" : "array",
            "description" : "Identifier of the customer",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyCustomerIds"
            }
          },
          "properties" : {
            "type" : "array",
            "description" : "Id of the product property",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyProperties"
            }
          },
          "overrides" : {
            "type" : "array",
            "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyOverrides"
            }
          },
          "arrangementId" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates an unique identifier of an account"
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "masterArrangementId" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created."
          },
          "roleName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc."
          },
          "currencyId" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency."
          },
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "activityId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "transactionAmount" : {
            "maximum" : 19,
            "minimum" : 0,
            "type" : "number",
            "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency"
          },
          "reason" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the reason for performing the current activity"
          },
          "simulationRunReference" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the runner Reference ID for simulation activity"
          },
          "channel" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the channel in which the activity was performed. If pricing is not determined based on channel, then this is not significant"
          },
          "branch" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the branch name/code in which the business activity was performed. If pricing is not determined based on branch, then this is not significant"
          },
          "lineOfBusiness" : {
            "maxLength" : 4,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the line of business in which the activity was performed. If pricing is not determined based on line of business, then this is not significant."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountDormancyReactivationBody" : {
        "type" : "object",
        "properties" : {
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountInterestConditionsResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/AccountInterestConditionsResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/AccountInterestConditionsResponseBodyProperties"
          }
        }
      },
      "AccountCustomer" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountCustomerBody"
          }
        },
        "description" : "AccountCustomer"
      },
      "AccountDetailsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountDetailsResponseBody"
          }
        },
        "description" : "AccountDetailsResponse"
      },
      "AccountProductResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/AccountProductResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/AccountProductResponseBodyProperties"
          }
        }
      },
      "AccountWithdrawalNoticeResponse1Body" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/AccountProductResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/AccountWithdrawalNoticeResponseBodyProperties"
          }
        }
      },
      "SavingsAccountBodyPrintAttributes" : {
        "type" : "object",
        "properties" : {
          "printAttributeNames" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string",
            "description" : "It denotes the values that can be either used to make decisions during statement processing or to pass on the value to down-stream systems."
          },
          "printAttributeValues" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string",
            "description" : "It denotes the associated value against the attribute name to make decisions during statement processing or to pass on the value to down-stream systems"
          }
        }
      },
      "AccountDormancyReactivationResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/AccountProductResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "SavingsAccountBodyPayments" : {
        "type" : "object",
        "properties" : {
          "percentage" : {
            "maxLength" : 12,
            "minLength" : 0,
            "type" : "string",
            "description" : "Percentage of holdings that can be pledged as collateral"
          },
          "startDate" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the date on which the transaction or payment gets initiated."
          },
          "endDate" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the date till which the transaction history requested. If 20120101 is the start date and 20120201 is the end date, all transactions that are booked between January 1 to February 1 2012 are returned"
          },
          "numberOfPayments" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies the number of coupon or interest payments a year"
          },
          "calculatedPaymentAmount" : {
            "maxLength" : 18,
            "minLength" : 0,
            "type" : "string",
            "description" : "System calculated Payment amount."
          },
          "adhocPaymentAmount" : {
            "maxLength" : 18,
            "minLength" : 0,
            "type" : "string",
            "description" : "One time payment amount made as part of the repayment activity. For scheduled payments  it indicates the actual amount paid instead of the scheduledPaymentAmount."
          },
          "baseDay" : {
            "maxLength" : 2,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the base day which will be used to cycle the Payment date"
          }
        }
      },
      "BusinessAccountBody" : {
        "type" : "object",
        "properties" : {
          "customerIds" : {
            "type" : "array",
            "description" : "Identifier of the customer",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyCustomerIds"
            }
          },
          "properties" : {
            "type" : "array",
            "description" : "Id of the product property",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyProperties"
            }
          },
          "overrides" : {
            "type" : "array",
            "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyOverrides"
            }
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "masterArrangementId" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created."
          },
          "roleName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc."
          },
          "currencyId" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency."
          },
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "activityId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "transactionAmount" : {
            "maximum" : 19,
            "minimum" : 0,
            "type" : "number",
            "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency"
          },
          "reason" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the reason for performing the current activity"
          },
          "simulationRunReference" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the runner Reference ID for simulation activity"
          },
          "channel" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the channel in which the activity was performed. If pricing is not determined based on channel, then this is not significant"
          },
          "branch" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the branch name/code in which the business activity was performed. If pricing is not determined based on branch, then this is not significant"
          },
          "lineOfBusiness" : {
            "maxLength" : 4,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the line of business in which the activity was performed. If pricing is not determined based on line of business, then this is not significant."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "balance" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BusinessAccountBodyBalance"
            }
          },
          "customer" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyCustomer"
            }
          }
        }
      },
      "AccountSchedule" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountScheduleBody"
          }
        },
        "description" : "AccountSchedule"
      },
      "AccountScheduleResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/AccountProductResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/AccountScheduleResponseBodyProperties"
          }
        }
      },
      "PayoffSavingsAccountsResponse1BodyProperties" : {
        "type" : "object",
        "properties" : {
          "settlement" : {
            "$ref" : "#/components/schemas/PayoffSavingsAccountsResponse1BodyPropertiesSettlement"
          }
        }
      },
      "BusinessArrangementErrorResponseBodyErrorDetails" : {
        "type" : "object",
        "properties" : {
          "fieldName" : {
            "type" : "string",
            "description" : "The name of the field"
          },
          "code" : {
            "type" : "string",
            "description" : "The identifier of the error message"
          },
          "message" : {
            "type" : "string",
            "description" : "The actual Transact error message for bad requests"
          },
          "property" : {
            "type" : "string",
            "description" : "Id of the product property"
          }
        }
      },
      "AccountResponseBodyProperties" : {
        "type" : "object",
        "properties" : {
          "balance" : {
            "$ref" : "#/components/schemas/AccountResponseBodyPropertiesBalance"
          }
        }
      },
      "SavingsAccountBodyAccountTitles2" : {
        "type" : "object",
        "properties" : {
          "accountTitle2" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Title line 2 that will appear in notice and statements"
          }
        }
      },
      "AccountBody" : {
        "type" : "object",
        "properties" : {
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "balance" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountBodyBalance"
            }
          }
        }
      },
      "SystemQueryErrorResponseBody" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The identifier of the error message"
          },
          "message" : {
            "type" : "string",
            "description" : "The actual Transact error message caused by server"
          },
          "type" : {
            "type" : "string",
            "description" : "The identifier of error type: System"
          }
        }
      },
      "AccountfacilitiesResponse1BodyInner" : {
        "type" : "object",
        "properties" : {
          "facility" : {
            "type" : "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "service" : {
                  "maxLength" : 15,
                  "type" : "string",
                  "description" : "Unique id of the service"
                },
                "serviceAvailability" : {
                  "maxLength" : 10,
                  "type" : "string",
                  "description" : "It will indicate whether the corresponding service is available for arrangement account"
                },
                "customerOption" : {
                  "maxLength" : 7,
                  "type" : "string",
                  "description" : "It will indicate whether user has opted the service or not."
                }
              }
            }
          },
          "arrangementId" : {
            "maxLength" : 30,
            "type" : "string",
            "description" : "Indicates an unique identifier of an account"
          },
          "effectiveDate" : {
            "maxLength" : 30,
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          }
        }
      },
      "AccountConditionsResponseBodyProperties" : {
        "type" : "object",
        "properties" : {
          "limit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesLimit"
          },
          "xisa" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xrateSetup" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xtxlimit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xisPoolid" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xira" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "balance" : {
            "$ref" : "#/components/schemas/AccountSimulationResponseBodyPropertiesBalance"
          },
          "activityCharges" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "messaging" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "arrangementRules" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "productQualifierNotice" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "balanceMaintenance" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "renewal" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "txnfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "minbalfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "bonus" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "closurefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "dormancyfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "mgmtfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "cardissuefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "limitfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "payfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "returnfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "nsfreversalfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "noticefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "cashback" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "forcecapitalise" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "customer" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesCustomer"
          },
          "crinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesCrinterest"
          },
          "officers" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "schedule" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesSchedule"
          },
          "periodiccharges" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "prefpricing" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "settlement" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesSettlement"
          },
          "tax" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "payoff" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "dormancy" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "facility" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "statement" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesStatement"
          },
          "constraint" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          }
        }
      },
      "AccountStatementResponse1Body" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/AccountProductResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/AccountStatementResponse1BodyProperties"
          }
        }
      },
      "BusinessArrangementErrorResponseBody" : {
        "type" : "object",
        "properties" : {
          "errorDetails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BusinessArrangementErrorResponseBodyErrorDetails"
            }
          },
          "type" : {
            "type" : "string",
            "description" : "The identifier of error type: Business"
          }
        }
      },
      "SavingsAccountBodyPostingRestrictions" : {
        "type" : "object",
        "properties" : {
          "postingRestriction" : {
            "maxLength" : 4,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies any restrictions for posting entries that are to be imposed on the Account"
          },
          "restrictionReason" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Sets restrictions on the actions that can be performed on an account. Allowed values can be retrieved through method getEbLookup, virtualTableName BLOCK.REASON.CODES. "
          },
          "startDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the date on which the transaction or payment gets initiated."
          },
          "expiryDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "This indicates the  date  on which the offer or privilege terminates for the event."
          },
          "unrestrictionReason" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Captures the code that removes the restriction set on an account.  Allowed values can be retrieved through method getEbLookup, virtualTableName UNBLOCK.REASON.CODES."
          },
          "restrictionTexts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyRestrictionTexts"
            }
          },
          "unrestrictionTexts" : {
            "type" : "array",
            "description" : "Reason for unblocking the restriction set on an account",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyUnrestrictionTexts"
            }
          }
        }
      },
      "CurrentAccountsBody" : {
        "type" : "object",
        "properties" : {
          "parties" : {
            "type" : "array",
            "description" : "Identifier of individuals in terms of Customers or Person or Entities with reference to the bank",
            "items" : {
              "$ref" : "#/components/schemas/CurrentAccountsBodyParties"
            }
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "activityId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "currencyId" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency."
          },
          "effectiveDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
          },
          "branch" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the branch name/code in which the business activity was performed. If pricing is not determined based on branch, then this is not significant"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "balance" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CurrentAccountsBodyBalance"
            }
          }
        }
      },
      "SavingsAccountBodyInterestStatement" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "maxLength" : 19,
            "minLength" : 0,
            "type" : "string",
            "description" : "Short title for the Account to be created"
          },
          "statement" : {
            "type" : "array",
            "description" : "Contains the details of account statement first cycle. It includes addon, participant account, lead account, print type, print attribute name, print attribute value, etc.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyStatement1"
            }
          }
        }
      },
      "SavingsAccountBodyAgentCustomerIds" : {
        "type" : "object",
        "properties" : {
          "agentCustomerId" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "The id of the 3rd party who sold the product on behalf of the institution."
          }
        }
      },
      "SavingsAccountBodyBalance" : {
        "type" : "object",
        "properties" : {
          "accountTitles" : {
            "type" : "array",
            "description" : "Short title on an account",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAccountTitles"
            }
          },
          "accountTitles2" : {
            "type" : "array",
            "description" : "Title line 2 that will appear in notice and statements",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAccountTitles2"
            }
          },
          "shortTitles" : {
            "type" : "array",
            "description" : "Contains the short title given to the name of an account or an arrangement",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyShortTitles"
            }
          },
          "alternateIds" : {
            "type" : "array",
            "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAlternateIds"
            }
          },
          "businessDayCentres" : {
            "type" : "array",
            "description" : "The country or region code to be considered for determining the holidays and used while calculating the schedule dates.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyBusinessDayCentres"
            }
          },
          "referalCodes" : {
            "type" : "array",
            "description" : "Indicates the conditions under which account details or details of entries over the account are to be included in an end of day report for referral to the account officer responsible. Referral conditions can be defined depending on transaction such as transaction code, amount and sign, or the balance of the Account.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyReferalCodes"
            }
          },
          "postingRestrictions" : {
            "type" : "array",
            "description" : "Identifies any restrictions for posting entries that are to be imposed on the Account",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyPostingRestrictions"
            }
          },
          "aprTypes" : {
            "type" : "array",
            "description" : "Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAprTypes"
            }
          },
          "otherOfficers" : {
            "type" : "array",
            "description" : "Specifies the additional officers who can assist with a product/arrangement",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyOtherOfficers"
            }
          },
          "mnemonic" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Shortcut code for referring an Entity/Company/Branch."
          },
          "accountId" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
          },
          "customerReference" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "description" : "The reference which is provided to the beneficiary/ creditor by the originator of payment"
          },
          "accountingCompany" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the accounting company of the account record"
          },
          "originationReference" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the account in source system, eg, a origination system."
          },
          "category" : {
            "maxLength" : 5,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the account or contract product name. For example for an account this maybe current, savings etc."
          },
          "baseDateType" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Defines if anniversaryDate or start date is based on account creation or once disbursement is done. Allowed values are ARRANGEMENT and DISBURSEMENT. ARRANGEMENT indicates that account start period is considered as arrangement creation time. If set as DISBURSEMENT the account start period is based on disbursement activity date"
          },
          "anniversary" : {
            "maxLength" : 6,
            "minLength" : 0,
            "type" : "string",
            "description" : "The start or end period defined in MMDD format to indicate the period when charge rules has to be applied"
          },
          "dateConvention" : {
            "maxLength" : 18,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates how the schedule date has to be adjusted when the schedule falls on a holiday. Allowed values are BACKWARD, FORWARD, FORWARD SAME MONTH or CALENDAR."
          },
          "dateAdjustment" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "Defines the behavior when recurring payment dates falls on a weekend or bank holiday. The payment is then executed either the 'preceding' or 'following' working day. ASPSP might reject the request due to the communicated value, if rules in Online-Banking are not supporting this execution rule."
          },
          "portfolioId" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the portfolio or security account"
          },
          "inactiveMonths" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the number of months without customer activity before an account is declared as inactive"
          },
          "baseDateKey" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the option to specify the basis for deriving the future event dates.Allowed values are previous(last adjusted event date will be used for deriving) ,base(last unadjusted event date provided by user will be used for deriving and null(change product ,renewal event base date will be used for deriving)"
          },
          "primaryOfficer" : {
            "maxLength" : 4,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specify the primary officer responsible for the arrangement"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountSimulationResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/PayoffSavingsAccountsResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/AccountSimulationResponseBodyProperties"
          }
        }
      },
      "AccountLimitResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountLimitResponseBody"
          }
        },
        "description" : "AccountLimitResponse"
      },
      "AccountBalanceMigrationBodyBalanceMaintenance" : {
        "type" : "object",
        "properties" : {
          "adjustProperties" : {
            "type" : "array",
            "description" : "Indicates the interest or account or charge properties for which balances are to be captured or adjusted.",
            "items" : {
              "$ref" : "#/components/schemas/AccountBalanceMigrationBodyAdjustProperties"
            }
          },
          "bills" : {
            "type" : "array",
            "description" : "List bills of all type",
            "items" : {
              "$ref" : "#/components/schemas/AccountBalanceMigrationBodyBills"
            }
          },
          "adjustmentDisplayname" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Denotes the description for the adjustment"
          },
          "netAdjustmentAmount" : {
            "maxLength" : 19,
            "minLength" : 0,
            "type" : "string",
            "description" : "The net adjustment for non-contingent balance types would be calculated and stored in this field by the system during Balance Adjustment, Write off activities of Balance maintenance."
          },
          "adjustmentDifferenceAccount" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "description" : "Represents the account number to be used while adjusting balance amounts"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountStatementResponse1" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountStatementResponse1Body"
          }
        },
        "description" : "AccountStatementResponse1"
      },
      "AccountCustomerResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountCustomerResponseBody"
          }
        },
        "description" : "AccountCustomerResponse"
      },
      "SavingsAccountBodyBusinessDayCentres" : {
        "type" : "object",
        "properties" : {
          "businessDayCentre" : {
            "maxLength" : 4,
            "minLength" : 0,
            "type" : "string",
            "description" : "The country or region code to be considered for determining the holidays and used while calculating the schedule dates."
          }
        }
      },
      "PayoffSavingsAccountsResponseBodyProperties" : {
        "type" : "object",
        "properties" : {
          "settlement" : {
            "$ref" : "#/components/schemas/PayoffSavingsAccountsResponseBodyPropertiesSettlement"
          },
          "payoff" : {
            "$ref" : "#/components/schemas/PayoffSavingsAccountsResponseBodyPropertiesPayoff"
          }
        }
      },
      "AccountSettlementResponseBodyProperties" : {
        "type" : "object",
        "properties" : {
          "settlement" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesSettlement"
          }
        }
      },
      "AccountLimit" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountLimitBody"
          }
        },
        "description" : "AccountLimit"
      },
      "PastStatementsResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/PastStatementsResponseBodyInner"
        }
      },
      "ForwardEntriesResponseQueryHeader" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Status of the API(success/failed)"
          },
          "audit" : {
            "$ref" : "#/components/schemas/ArrangementHeaderAudit"
          },
          "page_size" : {
            "type" : "integer",
            "description" : "The total number of records per page",
            "format" : "int32"
          },
          "page_start" : {
            "type" : "integer",
            "description" : "The record from which the response should be displayed",
            "format" : "int32"
          },
          "total_size" : {
            "type" : "integer",
            "description" : "The total number of records present",
            "format" : "int32"
          },
          "page_token" : {
            "type" : "string",
            "description" : "Unique id expected to get as part of response from Transact on every enquiry request"
          },
          "data" : {
            "$ref" : "#/components/schemas/ForwardEntriesResponseQueryHeaderData"
          }
        }
      },
      "CurrentAccountsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CurrentAccountsResponseBody"
          }
        },
        "description" : "CurrentAccountsResponse"
      },
      "PayoffSavingsAccountsBodyPayoff" : {
        "type" : "object",
        "properties" : {
          "expiryDays" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the period within which the locked rate needs to be availed."
          },
          "settleDues" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies if the amounts made due to the customer between the simulation start date and payoff effective date, should be considered settled or not. By setting this field to YES, auto settlement of future dues would be enabled and setting it to null or NO will not settle the due amounts automatically"
          },
          "Percentage" : {
            "maxLength" : 12,
            "minLength" : 0,
            "type" : "string",
            "description" : "Percentage of holdings that can be pledged as collateral"
          },
          "fixedAmount" : {
            "maxLength" : 19,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the monetary amount that is fixed during the associated account's effective period"
          },
          "Action" : {
            "maxLength" : 9,
            "minLength" : 0,
            "type" : "string",
            "description" : "Refers to view or cancel options."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountProductResponseBodyPropertiesBalance" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesLimitHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountProductBodyBalance"
          }
        }
      },
      "SavingsAccountBodyRepayment" : {
        "type" : "object",
        "properties" : {
          "payInSettlementActivity" : {
            "maxLength" : 55,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the transaction type used for settlement of the bills due"
          },
          "payInSettlement" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes."
          },
          "payInRule" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None"
          },
          "payInRCType" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the transaction type used by the transaction recycler for retrying the debits"
          },
          "payInRCCondition" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the transaction recycling rules which define the set of retry conditions"
          },
          "paymentTypes" : {
            "type" : "array",
            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyPaymentTypes"
            }
          },
          "reference" : {
            "type" : "array",
            "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyReference"
            }
          }
        }
      },
      "PayoffSavingsAccounts1" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/PayoffSavingsAccounts1Body"
          }
        },
        "description" : "PayoffSavingsAccounts1"
      },
      "SavingsAccountResponseBodyPropertiesLimitHeader" : {
        "type" : "object",
        "properties" : {
          "transactionStatus" : {
            "type" : "string",
            "description" : "The status of the transaction"
          },
          "audit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesLimitHeaderAudit"
          },
          "id" : {
            "type" : "string",
            "description" : "The Identifier of the record created"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the record"
          }
        }
      },
      "PayoffSavingsAccountsBodySettlement" : {
        "type" : "object",
        "properties" : {
          "payinSettlement1" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Flag to indicate whether Payin Settlement instruction is required or not. Valid input is Yes or No. Default value is Yes",
            "enum" : [ "Payin Settlement" ]
          },
          "ddMandateRef11" : {
            "maxLength" : 25,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1",
            "enum" : [ "DD Mandate Ref" ]
          },
          "payinAccount11" : {
            "maxLength" : 90,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the account from which funds are to be debited against the payment type",
            "enum" : [ "Payin Account" ]
          },
          "payinBeneficiary11" : {
            "maxLength" : 17,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the beneficiary Id used for settlement of the bills due",
            "enum" : [ "Payin Beneficiary" ]
          },
          "payinPercentage11" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the percentage of the payment amount used for settlement of the bills due",
            "enum" : [ "Payin Percentage" ]
          },
          "payinAmount11" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the finite amount of the payment used for settlement of the bills due",
            "enum" : [ "Payin Amount" ]
          },
          "payoutSettlement1" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes",
            "enum" : [ "Payout Settlement" ]
          },
          "payoutAccount11" : {
            "maxLength" : 90,
            "minLength" : 0,
            "type" : "string",
            "description" : "The account to which a settlement amount is transferred",
            "enum" : [ "Payout Account" ]
          },
          "payoutBeneficiary11" : {
            "maxLength" : 17,
            "minLength" : 0,
            "type" : "string",
            "description" : "The beneficiary that payment should be made to",
            "enum" : [ "Payout Beneficiary" ]
          },
          "payoutPercentage11" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the percentage of the payment amount used for settlement of the payable",
            "enum" : [ "Payout Percentage" ]
          },
          "payoutAmount11" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the finite amount of the payment used for settlement of the payables",
            "enum" : [ "Payout Amount" ]
          },
          "payinAcctSettle" : {
            "maxLength" : 8,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the account from which funds are to be debited against the payment type",
            "enum" : [ "Payin" ]
          },
          "payoutAcctSettle" : {
            "maxLength" : 8,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the account to which a settlement amount is transferred",
            "enum" : [ "Payout" ]
          },
          "paymentType11" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
            "enum" : [ "Payment Type" ]
          },
          "payinPoProduct11" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the payment order product id for which the payment is initiated",
            "enum" : [ "Payin Product" ]
          },
          "payinActivity11" : {
            "maxLength" : 55,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due",
            "enum" : [ "Payin Activity" ]
          },
          "payinAcDbRule1" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the rule on which the system should utilise the funds available in the pay in account during the settlement process. Options are Full, Partial and None",
            "enum" : [ "Payin Account Debit Rule" ]
          },
          "payinSettleActivity1" : {
            "maxLength" : 55,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the activity to be used to settle the dues of the current contract",
            "enum" : [ "Payin Settle Activity" ]
          },
          "payinRcType1" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the transaction type used by the transaction recycler for retrying the debits",
            "enum" : [ "Payin RC Type" ]
          },
          "payinRcCondition1" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the transaction recycling rules which define the set of retry conditions",
            "enum" : [ "Payin RC Condition" ]
          },
          "defaultSettlementAccount" : {
            "maxLength" : 90,
            "minLength" : 0,
            "type" : "string",
            "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type",
            "enum" : [ "Default Settlement Account" ]
          },
          "defaultBeneficiary" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the beneficiary the payment should be made to in default.",
            "enum" : [ "Default Beneficiary" ]
          },
          "updatePendingRetry" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "If this field is set to YES, then whenever user changes the Payin settlement accounts then the modified accounts should affect the pending funding requests raised for the current overdue Bills. If this field is set to NO or blank then the changes to the payin settlement accounts apply to the next due bills"
          },
          "accountSettlement" : {
            "maxLength" : 8,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies the account at which the interest or payment settlement is to be made.",
            "enum" : [ "Account Settlement" ]
          },
          "payoutPptyClass11" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
            "enum" : [ "Property Class" ]
          },
          "payoutProperty11" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the payout payment order product for which payment is initiated",
            "enum" : [ "Payout Property" ]
          },
          "payoutPoProduct11" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the payout payment order product for which payment is initiated",
            "enum" : [ "Payout Product" ]
          },
          "payoutActivity11" : {
            "maxLength" : 55,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the transaction type used to credit the customer account for settlement of the payables",
            "enum" : [ "Payout Activity" ]
          },
          "payoutAcCrRule1" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the user exception routine",
            "enum" : [ "Payout Account Credit Rule" ]
          },
          "payoutSettleActivity1" : {
            "maxLength" : 55,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the activity used for payout when payout of funds need to happen automatically",
            "enum" : [ "Payout Settle Activity" ]
          },
          "payoutRcType1" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the Transaction Cycler type  reference to be used during handoff to inform the recycler what type of transaction is being handed-off",
            "enum" : [ "Payout RC Type" ]
          },
          "payoutRcCondition1" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the Transaction Cycler condition to be used for the payout property to allow variation of different retry conditions",
            "enum" : [ "Payout RC Condition" ]
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountDebitResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/PayoffSavingsAccountsResponse1BodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "SavingsAccountBodyMargins" : {
        "type" : "object",
        "properties" : {
          "marginType" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed"
          },
          "marginOperand" : {
            "maxLength" : 9,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates whether the margin is positive or negaitve, when margin percentage is applied on the market rate while calculating the fair value. Possible values include + or -"
          },
          "marginRate" : {
            "maxLength" : 12,
            "minLength" : 0,
            "type" : "string",
            "description" : "This is the rate applied over the default interest rate or commission rate to achieve the actual rate."
          }
        }
      },
      "CorporateAccountResponseBodyArrangementActivity" : {
        "type" : "object",
        "properties" : {
          "partyIds" : {
            "type" : "array",
            "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyPartyIds"
            }
          },
          "partyRoles" : {
            "type" : "array",
            "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyPartyRoles"
            }
          },
          "agentCustomerIds" : {
            "type" : "array",
            "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAgentCustomerIds"
            }
          },
          "agentArrangementIds" : {
            "type" : "array",
            "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAgentArrangementIds"
            }
          },
          "agentRoles" : {
            "type" : "array",
            "description" : "The role of the 3rd party, select from standard list",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAgentRoles"
            }
          },
          "arrangmentId" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates an unique identifier of an account"
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "activityId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "currency" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the currency. E.g. USD, GBP etc"
          },
          "productVariation" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer"
          },
          "pricingSelection" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing."
          },
          "pricingPlan" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment"
          },
          "rewardsArrangementId" : {
            "maxLength" : 17,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)"
          },
          "tradeDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Standard date field which records trade date of the account"
          },
          "arrangementEffectiveDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "It is a date on/upon which an account is considered to take effect"
          },
          "reason" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the reason for performing the current activity"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "BusinessAccountResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/AccountsArrangementsResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/BusinessAccountResponseBodyProperties"
          }
        }
      },
      "AccountSimulationBodyPostingRestrictions" : {
        "type" : "object",
        "properties" : {
          "postingRestriction" : {
            "maxLength" : 4,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies any restrictions for posting entries that are to be imposed on the Account"
          },
          "restrictionReason" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Sets restrictions on the actions that can be performed on an account. Allowed values can be retrieved through method getEbLookup, virtualTableName BLOCK.REASON.CODES. "
          },
          "restrictionText" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Free text information to capture the reason for restriction applied on an account"
          },
          "startDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the date on which the transaction or payment gets initiated."
          },
          "expiryDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "This indicates the  date  on which the offer or privilege terminates for the event."
          },
          "unrestrictionReason" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Captures the code that removes the restriction set on an account.  Allowed values can be retrieved through method getEbLookup, virtualTableName UNBLOCK.REASON.CODES."
          },
          "unrestrictionText" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Reason for unblocking the restriction set on an account"
          }
        }
      },
      "PayoffSavingsAccounts1Body" : {
        "type" : "object",
        "properties" : {
          "currencyId" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency."
          },
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "activityId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "transactionAmount" : {
            "maximum" : 19,
            "minimum" : 0,
            "type" : "number",
            "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency"
          },
          "contractId" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the unique identifier of the transaction or contract which initiated the activity"
          },
          "systemId" : {
            "maxLength" : 6,
            "minLength" : 0,
            "type" : "string",
            "description" : "System ID of the originating transaction"
          },
          "externalEventStatus" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Determines the status of events sent to external system from the current system for the given activity"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "settlement" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccounts1BodySettlement"
            }
          }
        }
      },
      "AccountChannelResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/AccountInterestConditionsResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "AccountPayoffAutoSimulationResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/PayoffSavingsAccountsResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/AccountPayoffAutoSimulationResponseBodyProperties"
          }
        }
      },
      "AccountPayoffAutoSimulationResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountPayoffAutoSimulationResponseBody"
          }
        },
        "description" : "AccountPayoffAutoSimulationResponse"
      },
      "PayoffSavingsAccountsResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/PayoffSavingsAccountsResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/PayoffSavingsAccountsResponseBodyProperties"
          }
        }
      },
      "PastStatementsResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "accountId" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
          },
          "statementId" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Contains the reference of the accounting entry"
          },
          "toDate" : {
            "maxLength" : 30,
            "type" : "string",
            "description" : "Indicates the business date until when the balance reservation event is active."
          },
          "frequency" : {
            "maxLength" : 30,
            "type" : "string",
            "description" : "Specifies the frequency in which the payment application(periodic payments) execute the payment instruction."
          },
          "detailedStatement" : {
            "maxLength" : 30,
            "type" : "string",
            "description" : "Contains the value which is passed on to statement inorder to differentiate between summary or detailed type of statement."
          },
          "leadOrParticipant" : {
            "maxLength" : 30,
            "type" : "string",
            "description" : "Indicates the type of account which is printed in the account statement whether it is lead or participant account"
          },
          "participantAccount" : {
            "maxLength" : 30,
            "type" : "string",
            "description" : "Indicates the participant account used for producing combined statement. When participant account is defined, this frequency number for the participant account is synchronised with the lead account and individual statement generation would be automatically suppressed."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          }
        }
      },
      "QueryErrorResponseBody" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The identifier of the error message"
          },
          "message" : {
            "type" : "string",
            "description" : "The actual Transact error message "
          },
          "type" : {
            "type" : "string",
            "description" : "The identifier of error type: "
          }
        }
      },
      "AccountBranchBody" : {
        "type" : "object",
        "properties" : {
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "branch" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the branch name/code in which the business activity was performed. If pricing is not determined based on branch, then this is not significant"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "SavingsAccountResponseBodyPropertiesCrinterest" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesLimitHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/SavingsAccountBodyCrinterest"
          }
        }
      },
      "AccountDormancyDetailsResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AccountDormancyDetailsResponseBodyInner"
        }
      },
      "BusinessAccountResponseBodyProperties" : {
        "type" : "object",
        "properties" : {
          "inheritance" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "reporting" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xisa" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xrateSetup" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xtxlimit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xisPoolid" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xira" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "balance" : {
            "$ref" : "#/components/schemas/BusinessAccountResponseBodyPropertiesBalance"
          },
          "messaging" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "activityCharges" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "agentCommission" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "alerts" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "withdrawalfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "cashdepfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "dormancyfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "servicefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "bulkcreditfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "bulkdebitfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "chqpayinfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "minbalfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "wirefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "txnfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "bonus" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "noticefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "periodiccharges" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "customer" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesCustomer"
          },
          "crinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "drinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "limit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "officers" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "schedule" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "renewal" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "tax" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "balanceAvailability" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "settlement" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "payoff" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "dormancy" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "facility" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "statement" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "constraint" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "prefpricing" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          }
        }
      },
      "AccountResponseBodyPropertiesBalance" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesLimitHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountBodyBalance"
          }
        }
      },
      "SavingsAccountResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBody"
          }
        },
        "description" : "SavingsAccountResponse"
      },
      "MudarabaSavingAccountResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/CorporateAccountResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/MudarabaSavingAccountResponseBodyProperties"
          }
        }
      },
      "SavingsAccountResponseBodyPropertiesSettlement" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesLimitHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/SavingsAccountBodySettlement"
          }
        }
      },
      "CurrentAccounts1Body" : {
        "type" : "object",
        "properties" : {
          "currencyId" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency."
          },
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "activityId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "transactionAmount" : {
            "maximum" : 19,
            "minimum" : 0,
            "type" : "number",
            "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency"
          },
          "contractId" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the unique identifier of the transaction or contract which initiated the activity"
          },
          "systemId" : {
            "maxLength" : 6,
            "minLength" : 0,
            "type" : "string",
            "description" : "System ID of the originating transaction"
          },
          "externalEventStatus" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Determines the status of events sent to external system from the current system for the given activity"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountBranch" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountBranchBody"
          }
        },
        "description" : "AccountBranch"
      },
      "SavingsAccountBody" : {
        "type" : "object",
        "properties" : {
          "partyIds" : {
            "type" : "array",
            "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyPartyIds"
            }
          },
          "partyRoles" : {
            "type" : "array",
            "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyPartyRoles"
            }
          },
          "agentCustomerIds" : {
            "type" : "array",
            "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAgentCustomerIds"
            }
          },
          "agentArrangementIds" : {
            "type" : "array",
            "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAgentArrangementIds"
            }
          },
          "agentRoles" : {
            "type" : "array",
            "description" : "The role of the 3rd party, select from standard list",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAgentRoles"
            }
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "activityId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "currency" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the currency. E.g. USD, GBP etc"
          },
          "productVariation" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer"
          },
          "pricingSelection" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing."
          },
          "pricingPlan" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment"
          },
          "rewardsArrangementId" : {
            "maxLength" : 17,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)"
          },
          "tradeDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Standard date field which records trade date of the account"
          },
          "arrangementEffectiveDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "It is a date on/upon which an account is considered to take effect"
          },
          "reason" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the reason for performing the current activity"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "limit" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyLimit"
            }
          },
          "balance" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyBalance"
            }
          },
          "customer" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyCustomer"
            }
          },
          "crinterest" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyCrinterest"
            }
          },
          "schedule" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodySchedule"
            }
          },
          "settlement" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodySettlement"
            }
          },
          "statement" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyStatement2"
            }
          }
        }
      },
      "AccountDormancyReactivation" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountDormancyReactivationBody"
          }
        },
        "description" : "AccountDormancyReactivation"
      },
      "AccountSimulationBody" : {
        "type" : "object",
        "properties" : {
          "customerIds" : {
            "type" : "array",
            "description" : "Identifier of the customer",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyCustomerIds"
            }
          },
          "properties" : {
            "type" : "array",
            "description" : "Id of the product property",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyProperties"
            }
          },
          "overrides" : {
            "type" : "array",
            "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyOverrides"
            }
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "masterArrangementId" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created."
          },
          "roleName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc."
          },
          "currencyId" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency."
          },
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "activityId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "transactionAmount" : {
            "maximum" : 19,
            "minimum" : 0,
            "type" : "number",
            "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency"
          },
          "reason" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the reason for performing the current activity"
          },
          "automaticRun" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "This field would be used during the Simulation scenarios. The following options are supported: 1. SIMULATE : The system would automatically trigger the Simulation the moment the simulated transaction is authorized. 2. EXECUTE : The system would automatically trigger the Execution of simulation the moment simulated transaction is authorized. It is assumed that the user would have simulated first before using this option. 3. DIRECT.EXECUTE: If the user does not want to do a two step process of simulating and executing, then this option may be utilized which does both actions in one go"
          },
          "simulationRunReference" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the runner Reference ID for simulation activity"
          },
          "synchronous" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates that this simulation capture is a synchronous request"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "balance" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountSimulationBodyBalance"
            }
          }
        }
      },
      "AccountLobResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountLobResponseBody"
          }
        },
        "description" : "AccountLobResponse"
      },
      "AccountLobResponseBodyArrangementActivity" : {
        "type" : "object",
        "properties" : {
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "lineOfBusiness" : {
            "maxLength" : 4,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the line of business in which the activity was performed. If pricing is not determined based on line of business, then this is not significant."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "CurrentAccountsResponseBodyArrangementActivity" : {
        "type" : "object",
        "properties" : {
          "parties" : {
            "type" : "array",
            "description" : "Identifier of individuals in terms of Customers or Person or Entities with reference to the bank",
            "items" : {
              "$ref" : "#/components/schemas/CurrentAccountsBodyParties"
            }
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "activityId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "currencyId" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency."
          },
          "effectiveDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format"
          },
          "branch" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the branch name/code in which the business activity was performed. If pricing is not determined based on branch, then this is not significant"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountWithdrawalNoticeResponse2Body" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/AccountProductResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/AccountWithdrawalNoticeResponseBodyProperties"
          }
        }
      },
      "AccountCreditBody" : {
        "type" : "object",
        "properties" : {
          "currencyId" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency."
          },
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "activityId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "transactionAmount" : {
            "maximum" : 19,
            "minimum" : 0,
            "type" : "number",
            "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency"
          },
          "contractId" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the unique identifier of the transaction or contract which initiated the activity"
          },
          "systemId" : {
            "maxLength" : 6,
            "minLength" : 0,
            "type" : "string",
            "description" : "System ID of the originating transaction"
          },
          "externalEventStatus" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Determines the status of events sent to external system from the current system for the given activity"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountBalanceMigrationResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/AccountProductResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/AccountBalanceMigrationResponseBodyProperties"
          }
        }
      },
      "QueryErrorResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ErrorHeader"
          },
          "error" : {
            "$ref" : "#/components/schemas/QueryErrorResponseBody"
          }
        },
        "description" : "QueryErrorResponse"
      },
      "AccountInterestConditionResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountInterestConditionResponseBody"
          }
        },
        "description" : "AccountInterestConditionResponse"
      },
      "SavingsAccountBodyReference1" : {
        "type" : "object",
        "properties" : {
          "payOutAccount" : {
            "maxLength" : 90,
            "minLength" : 0,
            "type" : "string",
            "description" : "The account to which a settlement amount is transferred."
          },
          "payOutBeneficiary" : {
            "maxLength" : 17,
            "minLength" : 0,
            "type" : "string",
            "description" : "The beneficiary that payment should be made to ."
          },
          "payOutPoProduct" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the payout payment order product for which payment is initiated"
          },
          "payOutPercentage" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the percentage of the payment amount used for settlement of the payables"
          },
          "payOutAmount" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the finite amount of the payment used for settlement of the payables"
          },
          "payOutActivity" : {
            "maxLength" : 55,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the transaction type used to credit the customer account for settlement of the payables "
          }
        }
      },
      "AccountCustomerBody" : {
        "type" : "object",
        "properties" : {
          "partyIds" : {
            "type" : "array",
            "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
            "items" : {
              "$ref" : "#/components/schemas/CurrentAccountsBodyParties"
            }
          },
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "customer" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyCustomer"
            }
          }
        }
      },
      "SavingsAccountBodyItems" : {
        "type" : "object",
        "properties" : {
          "holidayRestrictItem" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates actual restricted item for holiday. It holds the value based on the holiday restriction type"
          }
        }
      },
      "AccountSimulationResponseBodyPropertiesBalance" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesLimitHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountSimulationBodyBalance"
          }
        }
      },
      "AccountBalanceMigrationBodyAdjustProperties" : {
        "type" : "object",
        "properties" : {
          "adjustProperty" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the interest or account or charge properties for which balances are to be captured or adjusted."
          },
          "adjustBalanceTypes" : {
            "type" : "array",
            "description" : " Indicates the balance type which is corresponding to the captured or adjusted property. It should be non-bill related balance type that are not currently linked to the arrangement. For example, balance types are CURACCOUNT, ACCPRINCIPALINT, AVLACCOUNT, etc.",
            "items" : {
              "$ref" : "#/components/schemas/AccountBalanceMigrationBodyAdjustBalanceTypes"
            }
          }
        }
      },
      "PayoffCurrentAccountsResponse1" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/PayoffCurrentAccountsResponse1Body"
          }
        },
        "description" : "PayoffCurrentAccountsResponse1"
      },
      "AccountScheduleResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountScheduleResponseBody"
          }
        },
        "description" : "AccountScheduleResponse"
      },
      "AccountInterestConditionsResponseBodyArrangementActivity" : {
        "type" : "object",
        "properties" : {
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "channel" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the channel in which the activity was performed. If pricing is not determined based on channel, then this is not significant"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountMigrationResponseBodyArrangementActivity" : {
        "type" : "object",
        "properties" : {
          "partyIds" : {
            "type" : "array",
            "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
            "items" : {
              "$ref" : "#/components/schemas/CurrentAccountsBodyParties"
            }
          },
          "originationReference" : {
            "type" : "array",
            "description" : "Identifier of the account in source system, eg, a origination system.",
            "items" : {
              "$ref" : "#/components/schemas/AccountMigrationBodyOriginationReference"
            }
          },
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "currency" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the currency. E.g. USD, GBP etc"
          },
          "branch" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the branch name/code in which the business activity was performed. If pricing is not determined based on branch, then this is not significant"
          },
          "channel" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the channel in which the activity was performed. If pricing is not determined based on channel, then this is not significant"
          },
          "lineOfBusiness" : {
            "maxLength" : 4,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the line of business in which the activity was performed. If pricing is not determined based on line of business, then this is not significant."
          },
          "originalContractDate" : {
            "type" : "string",
            "description" : "Indicates the original contract date of the arrangement which was migrated from the legacy system.",
            "format" : "date"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountProductBodyAccountTypes" : {
        "type" : "object",
        "properties" : {
          "accountType" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,."
          }
        }
      },
      "BusinessQueryErrorResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ErrorHeader"
          },
          "error" : {
            "$ref" : "#/components/schemas/BusinessQueryErrorResponseBody"
          }
        },
        "description" : "BusinessQueryErrorResponse"
      },
      "SavingsAccountResponseBodyPropertiesLimitHeaderAudit" : {
        "type" : "object",
        "properties" : {
          "T24_time" : {
            "type" : "integer",
            "description" : "Time taken to response by Transact",
            "format" : "int32"
          },
          "versionNumber" : {
            "type" : "string",
            "description" : "Current number of the record"
          },
          "requestParse_time" : {
            "type" : "number",
            "description" : "Time taken to parse the request by IRIS"
          },
          "responseParse_time" : {
            "type" : "number",
            "description" : "Time taken to parse the response by IRIS"
          }
        }
      },
      "AccountProduct" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountProductBody"
          }
        },
        "description" : "AccountProduct"
      },
      "CorporateAccountResponseBodyProperties" : {
        "type" : "object",
        "properties" : {
          "reporting" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xisa" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xrateSetup" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xtxlimit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xisPoolid" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xira" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "balance" : {
            "$ref" : "#/components/schemas/CorporateAccountResponseBodyPropertiesBalance"
          },
          "messaging" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "activityCharges" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "agentCommission" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "rewardsPoints" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "alerts" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "highestdebit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "chequewd" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "minbalfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "noofcredits" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "noofdebits" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "turnovercredit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "turnoverdebit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "bonus" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "investcredit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "achcreditfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "achdebitfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "atmdebitfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "atmposfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "wirefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "overdraft" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "odnotification" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "withdrawalfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "packagefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "closurefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "accharge" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "dormancyfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "mgmtfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "cardissuefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "commitmentfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "setupfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "subscriptionfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "inhcommitment" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "limitfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "payfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "returnfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "nsfreversalfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "cashback" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "adminfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "servicefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "periodiccharges" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "customer" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "crinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "drinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "penalint" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "bundleinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "infcrinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "infdrinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "inhcrinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "inhdrinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "inhpenalint" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "utllimitfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "ovdlimitfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "bundlecrinterst" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "bundledrinterst" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "internalintdr" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "internalintdr2" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "internalintcr" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "internalintcr2" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "limit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "officers" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "schedule" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "inhSchedule" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "arrangementRules" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "renewal" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "tax" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "balanceAvailability" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "settlement" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "payoff" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "dormancy" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "facility" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "statement" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "inheritanceSource" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "inheritanceTarget" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "constraint" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "prefpricing" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          }
        }
      },
      "ForwardEntriesResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/ForwardEntriesResponseBodyInner"
        }
      },
      "CurrentAccountsResponse1Body" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/PayoffSavingsAccountsResponse1BodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "BusinessQueryErrorResponseBody" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "The identifier of the error message"
          },
          "message" : {
            "type" : "string",
            "description" : "The actual Transact error message for bad requests"
          },
          "type" : {
            "type" : "string",
            "description" : "The identifier of error type: Business"
          }
        }
      },
      "BusinessArrangementErrorResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "error" : {
            "$ref" : "#/components/schemas/BusinessArrangementErrorResponseBody"
          }
        },
        "description" : "BusinessArrangementErrorResponse"
      },
      "AccountCustomerResponseBodyArrangementActivity" : {
        "type" : "object",
        "properties" : {
          "partyIds" : {
            "type" : "array",
            "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
            "items" : {
              "$ref" : "#/components/schemas/CurrentAccountsBodyParties"
            }
          },
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountProductResponseBodyProperties" : {
        "type" : "object",
        "properties" : {
          "inheritance" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "limit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xisa" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xrateSetup" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xtxlimit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xisPoolid" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xira" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "balance" : {
            "$ref" : "#/components/schemas/AccountProductResponseBodyPropertiesBalance"
          },
          "activityCharges" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "messaging" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "arrangementRules" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "productQualifierNotice" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "agentCommission" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "rewardsPoints" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "alerts" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "balanceAvailability" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "balanceMaintenance" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "renewal" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "txnfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "minbalfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "bonus" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "closurefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "dormancyfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "mgmtfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "cardissuefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "limitfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "payfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "returnfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "nsfreversalfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "noticefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "cashback" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "forcecapitalise" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "customer" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "crinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "officers" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "schedule" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "poNotice" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "periodiccharges" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "prefpricing" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "settlement" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "tax" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "dormancy" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "facility" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "statement" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "constraint" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "accreporting" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "pricingadjustment" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          }
        }
      },
      "AccountPayoutResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/PayoffSavingsAccountsResponse1BodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "AccountStatementResponseQueryHeader" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Status of the API(success/failed)"
          },
          "audit" : {
            "$ref" : "#/components/schemas/ArrangementHeaderAudit"
          },
          "page_size" : {
            "type" : "integer",
            "description" : "The total number of records per page",
            "format" : "int32"
          },
          "page_start" : {
            "type" : "integer",
            "description" : "The record from which the response should be displayed",
            "format" : "int32"
          },
          "total_size" : {
            "type" : "integer",
            "description" : "The total number of records present",
            "format" : "int32"
          },
          "page_token" : {
            "type" : "string",
            "description" : "Unique id expected to get as part of response from Transact on every enquiry request"
          },
          "data" : {
            "$ref" : "#/components/schemas/AccountStatementResponseQueryHeaderData"
          }
        }
      },
      "AccountSimulation" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountSimulationBody"
          }
        },
        "description" : "AccountSimulation"
      },
      "PastStatementsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/PastStatementsResponseBody"
          }
        },
        "description" : "PastStatementsResponse"
      },
      "PayoffSavingsAccountsResponse1Body" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/PayoffSavingsAccountsResponse1BodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/PayoffSavingsAccountsResponse1BodyProperties"
          }
        }
      },
      "MudarabaSavingAccountResponseBodyProperties" : {
        "type" : "object",
        "properties" : {
          "inheritance" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "limit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "statement" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "constraint" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "reporting" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "periodicCharges" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "alerts" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "agentCommission" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "pricingRules" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xisa" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xrateSetup" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xtxlimit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xira" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "balance" : {
            "$ref" : "#/components/schemas/CorporateAccountResponseBodyPropertiesBalance"
          },
          "activityCharges" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "messaging" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "arrangementRules" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "balanceAvailability" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "renewal" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "closurefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "dormancyfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "pdsprofit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "customer" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "crprofit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "crprofithiba" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "officers" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "schedule" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "settlement" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "tax" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "payoff" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "dormancy" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "facility" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "poolId" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          }
        }
      },
      "AccountAdjustmentBody" : {
        "type" : "object",
        "properties" : {
          "currencyId" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency."
          },
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "activityId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "transactionAmount" : {
            "maximum" : 19,
            "minimum" : 0,
            "type" : "number",
            "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency"
          },
          "contractId" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the unique identifier of the transaction or contract which initiated the activity"
          },
          "systemId" : {
            "maxLength" : 6,
            "minLength" : 0,
            "type" : "string",
            "description" : "System ID of the originating transaction"
          },
          "externalEventStatus" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Determines the status of events sent to external system from the current system for the given activity"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountfacilitiesResponseBodyPropertiesFacility" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesLimitHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountfacilitiesBodyFacility"
          }
        }
      },
      "ForwardEntriesResponseQueryHeaderData" : {
        "type" : "object",
        "properties" : {
          "openingBalance" : {
            "type" : "string",
            "description" : "Balance brought forward from the previous date/period."
          },
          "closingBalance" : {
            "type" : "string",
            "description" : "Closing balance of the arrangement"
          }
        }
      },
      "AccountWithdrawalNoticeResponse1" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountWithdrawalNoticeResponse1Body"
          }
        },
        "description" : "AccountWithdrawalNoticeResponse1"
      },
      "AccountWithdrawalNoticeResponse2" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountWithdrawalNoticeResponse2Body"
          }
        },
        "description" : "AccountWithdrawalNoticeResponse2"
      },
      "CorporateAccount" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CorporateAccountBody"
          }
        },
        "description" : "CorporateAccount"
      },
      "AccountDormancyStatusResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/AccountProductResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "SavingsAccountResponseBodyPropertiesInheritanceHeader" : {
        "type" : "object",
        "properties" : {
          "transactionStatus" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string"
          }
        }
      },
      "AccountfacilitiesResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountfacilitiesResponseBody"
          }
        },
        "description" : "AccountfacilitiesResponse"
      },
      "PayoffCurrentAccountsBody" : {
        "type" : "object",
        "properties" : {
          "customerIds" : {
            "type" : "array",
            "description" : "Identifier of the customer",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyCustomerIds"
            }
          },
          "properties" : {
            "type" : "array",
            "description" : "Id of the product property",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyProperties"
            }
          },
          "overrides" : {
            "type" : "array",
            "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyOverrides"
            }
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "masterArrangementId" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created."
          },
          "roleName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc."
          },
          "currencyId" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency."
          },
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "activityId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "transactionAmount" : {
            "maximum" : 19,
            "minimum" : 0,
            "type" : "number",
            "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency"
          },
          "reason" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the reason for performing the current activity"
          },
          "automaticRun" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "This field would be used during the Simulation scenarios. The following options are supported: 1. SIMULATE : The system would automatically trigger the Simulation the moment the simulated transaction is authorized. 2. EXECUTE : The system would automatically trigger the Execution of simulation the moment simulated transaction is authorized. It is assumed that the user would have simulated first before using this option. 3. DIRECT.EXECUTE: If the user does not want to do a two step process of simulating and executing, then this option may be utilized which does both actions in one go"
          },
          "simulationRunReference" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the runner Reference ID for simulation activity"
          },
          "synchronous" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates that this simulation capture is a synchronous request"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "settlement" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodySettlement"
            }
          },
          "payoff" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyPayoff"
            }
          }
        }
      },
      "SavingsAccountBodyOtherOfficers" : {
        "type" : "object",
        "properties" : {
          "otherOfficerId" : {
            "maxLength" : 4,
            "minLength" : 0,
            "type" : "string",
            "description" : "Other officers managing the Customer"
          },
          "otherOfficerRole" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "It specifies the role defined for each additional officer of the product or arrangement"
          },
          "otherOfficerNotes" : {
            "maxLength" : 50,
            "minLength" : 0,
            "type" : "string",
            "description" : "It specifies the notes related to the other officer entered by a user."
          }
        }
      },
      "AccountPayoffAutoSimulationResponseBodyProperties" : {
        "type" : "object",
        "properties" : {
          "settlement" : {
            "$ref" : "#/components/schemas/AccountPayoffAutoSimulationResponseBodyPropertiesSettlement"
          },
          "payoff" : {
            "$ref" : "#/components/schemas/AccountPayoffAutoSimulationResponseBodyPropertiesPayoff"
          }
        }
      },
      "AccountProductResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountProductResponseBody"
          }
        },
        "description" : "AccountProductResponse"
      },
      "AccountInfoResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "customers" : {
            "type" : "array",
            "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
            "items" : {
              "type" : "object",
              "properties" : {
                "customerId" : {
                  "maxLength" : 35,
                  "type" : "string",
                  "description" : "Identifier of the customer"
                },
                "customerRole" : {
                  "maxLength" : 30,
                  "type" : "string",
                  "description" : "Indicates role of a customer for an arrangement."
                }
              }
            }
          },
          "accountId" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
          },
          "companyCode" : {
            "maxLength" : 11,
            "type" : "string",
            "description" : "The identifier of the underlying Entity/Company/Branch."
          },
          "displayName" : {
            "maxLength" : 30,
            "type" : "string",
            "description" : "Contains the name used for display or enrichment purposes"
          },
          "currency" : {
            "maxLength" : 3,
            "type" : "string",
            "description" : "Identifies the currency. E.g. USD, GBP etc"
          },
          "onlineActualBalance" : {
            "type" : "number",
            "description" : "Real-time balance including all authorised transactions posted against the account, excluding any entries with a future processing date."
          },
          "clearedBalance" : {
            "type" : "number",
            "description" : "Balance taking into consideration all cleared funds booked against the account, including credit and reversed debit entries with a future exposure date."
          },
          "workingBalance" : {
            "type" : "string",
            "description" : "Real-time balance including all authorised transactions posted against the account and, unless it is a nostro or internal account, unauthorised debit entries."
          },
          "availableBalance" : {
            "type" : "string",
            "description" : "Available balance of the account which is the projected balance which includes the net movements of both debits and credits against the account."
          },
          "lockedAmount" : {
            "maximum" : 19,
            "type" : "number",
            "description" : "Shows reserved amount for the underlying account for a given balance reservation event."
          },
          "availableLimit" : {
            "type" : "number",
            "description" : "The portion of an allocated credit limit that is available for the nominated customer"
          },
          "availableFunds" : {
            "type" : "number",
            "description" : "Total funds available in the account after all the ongoing transactions have been completed"
          },
          "arrangementId" : {
            "maxLength" : 17,
            "type" : "string",
            "description" : "Indicates an unique identifier of an account"
          },
          "productId" : {
            "maxLength" : 30,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "productDescription" : {
            "maxLength" : 30,
            "type" : "string",
            "description" : "Indicates the description of the Product"
          },
          "status" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Specifies the status of the agreement with following options, UNAUTH - input but not authorised, AUTH - authorised and LIVE, CURRENT - disbursement initiated, EXPIRED - past final payment date with pending dues, REVERSED - reversed, CLOSE - closed, PENDING.CLOSURE - ready for closure"
          },
          "branch" : {
            "maxLength" : 16,
            "type" : "string",
            "description" : "Contains the branch name/code in which the business activity was performed. If pricing is not determined based on branch, then this is not significant"
          },
          "secondaryLimitAmount" : {
            "type" : "string",
            "description" : "Contains the secondary limit amount to be used for the purpose of secondary limit check"
          },
          "accountTitle" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Short title on an account"
          },
          "accountOpeningDate" : {
            "maxLength" : 8,
            "type" : "string",
            "description" : "Contains the opening date of the account, used to check when the account was created."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          }
        }
      },
      "SavingAccountResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/SavingAccountResponseBody"
          }
        },
        "description" : "SavingAccountResponse"
      },
      "AccountSimulationBodyShortTitles" : {
        "type" : "object",
        "properties" : {
          "shortTitle" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the short title given to the name of an account or an arrangement"
          }
        }
      },
      "AccountSimulationResponse1Body" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/PayoffSavingsAccountsResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "AccountInterestConditionsResponseBodyProperties" : {
        "type" : "object",
        "properties" : {
          "crinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesCrinterest"
          }
        }
      },
      "SavingsAccountBodyAccountTitles" : {
        "type" : "object",
        "properties" : {
          "accountTitle" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Short title on an account"
          }
        }
      },
      "AccountLimitBody" : {
        "type" : "object",
        "properties" : {
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "limit" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyLimit"
            }
          }
        }
      },
      "SavingsAccountBodyAlternateIds" : {
        "type" : "object",
        "properties" : {
          "alternateIdType" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the alternate account system identifier used for defining the alternate account Id"
          },
          "alternateId" : {
            "maxLength" : 36,
            "minLength" : 0,
            "type" : "string",
            "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment."
          }
        }
      },
      "PayoffSavingsAccountsBody" : {
        "type" : "object",
        "properties" : {
          "customerIds" : {
            "type" : "array",
            "description" : "Identifier of the customer",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyCustomerIds"
            }
          },
          "properties" : {
            "type" : "array",
            "description" : "Id of the product property",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyProperties"
            }
          },
          "overrides" : {
            "type" : "array",
            "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyOverrides"
            }
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "masterArrangementId" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created."
          },
          "roleName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc."
          },
          "currencyId" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency."
          },
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "activityId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "transactionAmount" : {
            "maximum" : 19,
            "minimum" : 0,
            "type" : "number",
            "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency"
          },
          "reason" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the reason for performing the current activity"
          },
          "automaticRun" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "This field would be used during the Simulation scenarios. The following options are supported: 1. SIMULATE : The system would automatically trigger the Simulation the moment the simulated transaction is authorized. 2. EXECUTE : The system would automatically trigger the Execution of simulation the moment simulated transaction is authorized. It is assumed that the user would have simulated first before using this option. 3. DIRECT.EXECUTE: If the user does not want to do a two step process of simulating and executing, then this option may be utilized which does both actions in one go"
          },
          "simulationRunReference" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the runner Reference ID for simulation activity"
          },
          "synchronous" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates that this simulation capture is a synchronous request"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "settlement" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodySettlement"
            }
          },
          "payoff" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyPayoff"
            }
          }
        }
      },
      "SystemQueryErrorResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ErrorHeader"
          },
          "error" : {
            "$ref" : "#/components/schemas/SystemQueryErrorResponseBody"
          }
        },
        "description" : "SystemQueryErrorResponse"
      },
      "AccountInterestConditionsBody" : {
        "type" : "object",
        "properties" : {
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "channel" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the channel in which the activity was performed. If pricing is not determined based on channel, then this is not significant"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "crinterest" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyCrinterest"
            }
          }
        }
      },
      "AccountPayoutResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountPayoutResponseBody"
          }
        },
        "description" : "AccountPayoutResponse"
      },
      "CurrentAccountsBodyParties" : {
        "type" : "object",
        "properties" : {
          "partyId" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field."
          },
          "partyRole" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the identifier used for the role played by the party or customer in the contract or account"
          }
        }
      },
      "AccountBalanceMigrationResponseBodyPropertiesBalanceMaintenance" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesLimitHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountBalanceMigrationBodyBalanceMaintenance"
          }
        }
      },
      "AccountArrangementDetailsResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AccountArrangementDetailsResponseBodyInner"
        }
      },
      "AccountInterestCondition" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountInterestConditionBody"
          }
        },
        "description" : "AccountInterestCondition"
      },
      "AccountMigrationResponseBodyProperties" : {
        "type" : "object",
        "properties" : {
          "inheritance" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "limit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesLimit"
          },
          "xisa" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xrateSetup" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xtxlimit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xisPoolid" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xira" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "balance" : {
            "$ref" : "#/components/schemas/AccountSimulationResponseBodyPropertiesBalance"
          },
          "activityCharges" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "messaging" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "arrangementRules" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "productQualifierNotice" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "agentCommission" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "rewardsPoints" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "alerts" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "balanceAvailability" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "balanceMaintenance" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "renewal" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "txnfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "minbalfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "bonus" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "closurefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "dormancyfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "mgmtfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "cardissuefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "limitfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "payfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "returnfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "nsfreversalfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "noticefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "cashback" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "forcecapitalise" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "customer" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesCustomer"
          },
          "crinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesCrinterest"
          },
          "officers" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "schedule" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesSchedule"
          },
          "poNotice" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "periodiccharges" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "prefpricing" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "settlement" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesSettlement"
          },
          "tax" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "payoff" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "dormancy" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "facility" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "statement" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesStatement"
          },
          "constraint" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "accreporting" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          }
        }
      },
      "AccountBalanceMigration" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountBalanceMigrationBody"
          }
        },
        "description" : "AccountBalanceMigration"
      },
      "BusinessAccount" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/BusinessAccountBody"
          }
        },
        "description" : "BusinessAccount"
      },
      "AccountMigrationBody" : {
        "type" : "object",
        "properties" : {
          "partyIds" : {
            "type" : "array",
            "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
            "items" : {
              "$ref" : "#/components/schemas/CurrentAccountsBodyParties"
            }
          },
          "originationReference" : {
            "type" : "array",
            "description" : "Identifier of the account in source system, eg, a origination system.",
            "items" : {
              "$ref" : "#/components/schemas/AccountMigrationBodyOriginationReference"
            }
          },
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "currency" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the currency. E.g. USD, GBP etc"
          },
          "branch" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the branch name/code in which the business activity was performed. If pricing is not determined based on branch, then this is not significant"
          },
          "channel" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the channel in which the activity was performed. If pricing is not determined based on channel, then this is not significant"
          },
          "lineOfBusiness" : {
            "maxLength" : 4,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the line of business in which the activity was performed. If pricing is not determined based on line of business, then this is not significant."
          },
          "originalContractDate" : {
            "type" : "string",
            "description" : "Indicates the original contract date of the arrangement which was migrated from the legacy system.",
            "format" : "date"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "limit" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyLimit"
            }
          },
          "balance" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountSimulationBodyBalance"
            }
          },
          "customer" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyCustomer"
            }
          },
          "crinterest" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyCrinterest"
            }
          },
          "schedule" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodySchedule"
            }
          },
          "settlement" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodySettlement"
            }
          },
          "statement" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyStatement2"
            }
          }
        }
      },
      "SavingsAccountBodyOffset" : {
        "type" : "object",
        "properties" : {
          "offsetRequired" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates if the settlement offset is required"
          },
          "offsetPayInActivity" : {
            "maxLength" : 55,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the offset payment rule activity that defines the list of due balances which need to be offset using the pay balance. For example, ACCOUNTS-OFFSET-REPAYRULE1, ACCOUNTS-OFFSET-REPAYRULE2, etc"
          },
          "offsetPayOutActivity" : {
            "maxLength" : 55,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the offset payout rule activity which defines the list of pay balances which need to be debited to offset due balance created. For example, ACCOUNTS-OFFSET-PAYOUTRULE, ACCOUNTS-OFFSET-PAYOUTRULE2, etc"
          },
          "offsetProperties" : {
            "type" : "array",
            "description" : "Indicates the property which needs to be used for settlement offset",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyOffsetProperties"
            }
          }
        }
      },
      "AccountCredit" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountCreditBody"
          }
        },
        "description" : "AccountCredit"
      },
      "Account" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountBody"
          }
        },
        "description" : "Account"
      },
      "AccountSimulationResponseBodyProperties" : {
        "type" : "object",
        "properties" : {
          "reporting" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xisa" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xrateSetup" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xtxlimit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xisPoolid" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xira" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "balance" : {
            "$ref" : "#/components/schemas/AccountSimulationResponseBodyPropertiesBalance"
          },
          "messaging" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "activityCharges" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "agentCommission" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "rewardsPoints" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "alerts" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "highestdebit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "chequewd" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "minbalfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "noofcredits" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "noofdebits" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "turnovercredit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "turnoverdebit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "bonus" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "investcredit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "achcreditfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "achdebitfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "atmdebitfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "atmposfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "wirefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "overdraft" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "odnotification" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "withdrawalfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "packagefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "closurefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "accharge" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "dormancyfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "mgmtfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "cardissuefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "commitmentfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "setupfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "subscriptionfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "inhcommitment" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "limitfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "payfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "returnfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "nsfreversalfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "cashback" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "adminfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "servicefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "txactax" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "txadtax" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "toatax" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "newarrfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "periodiccharges" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "customer" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "arcrinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "ardrinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "penalint" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "bundleinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "infcrinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "infdrinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "inhcrinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "inhdrinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "inhpenalint" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "utllimitfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "ovdlimitfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "limit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "officers" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "schedule" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "inhSchedule" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "arrangementRules" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "renewal" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "tax" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "balanceAvailability" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "settlement" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "payoff" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "dormancy" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "facility" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "statement" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "inheritanceSource" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "inheritanceTarget" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "constraint" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "prefpricing" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          }
        }
      },
      "SavingsAccountBodyCustomer" : {
        "type" : "object",
        "properties" : {
          "customers" : {
            "type" : "array",
            "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyCustomers"
            }
          },
          "jointLiability" : {
            "maxLength" : 1,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies if there is a joint liability on the limit record Allowed values: -YES -NO  "
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountWithdrawalNoticeResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/AccountProductResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/AccountWithdrawalNoticeResponseBodyProperties"
          }
        }
      },
      "AccountBalanceMigrationBodyAdjustBalanceTypes" : {
        "type" : "object",
        "properties" : {
          "adjustBalanceType" : {
            "maxLength" : 22,
            "minLength" : 0,
            "type" : "string",
            "description" : " Indicates the balance type which is corresponding to the captured or adjusted property. It should be non-bill related balance type that are not currently linked to the arrangement. For example, balance types are CURACCOUNT, ACCPRINCIPALINT, AVLACCOUNT, etc."
          },
          "originalBalanceAmount" : {
            "maxLength" : 19,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the original balance amount for the each of the given balance type."
          },
          "newBalanceAmount" : {
            "maxLength" : 19,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the new balance amount for the corresponding balance type while capturing a new balance type or adjusting an existing balance type. This is a signed field. For write off activities, system will default this field to zero."
          },
          "adjustBalanceAmount" : {
            "maxLength" : 19,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the adjusted balance amount for the corresponding balance type. This is a signed field, sign used to indicate the debit or credit entry to be passed based on the balance type and the product line of the product."
          },
          "writeOff" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the removal of an asset from the balance sheet due to impairment, obsolescence, or other factors"
          },
          "writeOffAmount" : {
            "maxLength" : 19,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates that the corresponding balance needs to be written off partially. It should not be greater than the original balance amount."
          }
        }
      },
      "SavingsAccountResponseBodyPropertiesBalance" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesLimitHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/SavingsAccountBodyBalance"
          }
        }
      },
      "CurrentAccounts1" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CurrentAccounts1Body"
          }
        },
        "description" : "CurrentAccounts1"
      },
      "AccountProductBody" : {
        "type" : "object",
        "properties" : {
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "balance" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountProductBodyBalance"
            }
          }
        }
      },
      "AccountDormancyDetailsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountDormancyDetailsResponseBody"
          }
        },
        "description" : "AccountDormancyDetailsResponse"
      },
      "AccountfacilitiesResponse1" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountfacilitiesResponse1Body"
          }
        },
        "description" : "AccountfacilitiesResponse1"
      },
      "SavingsAccountBodyAprTypes" : {
        "type" : "object",
        "properties" : {
          "aprType" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest"
          },
          "aprRate" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the Annual Percentage Rate  calculated for the specified annual percenatage rate type"
          }
        }
      },
      "AccountsArrangements" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountsArrangementsBody"
          }
        },
        "description" : "AccountsArrangements"
      },
      "AccountChannelResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountChannelResponseBody"
          }
        },
        "description" : "AccountChannelResponse"
      },
      "AccountCreditResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountCreditResponseBody"
          }
        },
        "description" : "AccountCreditResponse"
      },
      "SavingsAccountResponseBodyPropertiesLimit" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesLimitHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/SavingsAccountBodyLimit"
          }
        }
      },
      "AccountConditionsResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/AccountProductResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/AccountConditionsResponseBodyProperties"
          }
        }
      },
      "CurrentAccountsBodyBalance" : {
        "type" : "object",
        "properties" : {
          "alternateIds" : {
            "type" : "array",
            "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAlternateIds"
            }
          },
          "accountType" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Groups the products based on their type, eg, Checking, Savings, CD etc,."
          },
          "accountName" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Display name or short name of the account specified."
          },
          "accountId" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
          },
          "portfolioId" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the portfolio or security account"
          },
          "anniversary" : {
            "maxLength" : 6,
            "minLength" : 0,
            "type" : "string",
            "description" : "The start or end period defined in MMDD format to indicate the period when charge rules has to be applied"
          },
          "customerReference" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "description" : "The reference which is provided to the beneficiary/ creditor by the originator of payment"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountCustomerResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/AccountCustomerResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/AccountCustomerResponseBodyProperties"
          }
        }
      },
      "SavingsAccountBodySwift" : {
        "type" : "object",
        "properties" : {
          "swiftStatementType" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Defines the SWIFT message type for the cycle 1 statement."
          }
        }
      },
      "AccountSimulationResponse1" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountSimulationResponse1Body"
          }
        },
        "description" : "AccountSimulationResponse1"
      },
      "AccountLob" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountLobBody"
          }
        },
        "description" : "AccountLob"
      },
      "SavingsAccountResponseBodyArrangementActivity" : {
        "type" : "object",
        "properties" : {
          "partyIds" : {
            "type" : "array",
            "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyPartyIds"
            }
          },
          "partyRoles" : {
            "type" : "array",
            "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyPartyRoles"
            }
          },
          "agentCustomerIds" : {
            "type" : "array",
            "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAgentCustomerIds"
            }
          },
          "agentArrangementIds" : {
            "type" : "array",
            "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAgentArrangementIds"
            }
          },
          "agentRoles" : {
            "type" : "array",
            "description" : "The role of the 3rd party, select from standard list",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAgentRoles"
            }
          },
          "arrangementId" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates an unique identifier of an account"
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "activityId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "currency" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the currency. E.g. USD, GBP etc"
          },
          "productVariation" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer"
          },
          "pricingSelection" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing."
          },
          "pricingPlan" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment"
          },
          "rewardsArrangementId" : {
            "maxLength" : 17,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)"
          },
          "tradeDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Standard date field which records trade date of the account"
          },
          "arrangementEffectiveDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "It is a date on/upon which an account is considered to take effect"
          },
          "reason" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the reason for performing the current activity"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountWithdrawalNoticeResponseBodyProperties" : {
        "type" : "object",
        "properties" : {
          "noticeWithdrawal" : {
            "$ref" : "#/components/schemas/AccountWithdrawalNoticeResponseBodyPropertiesNoticeWithdrawal"
          }
        }
      },
      "AccountsArrangementsResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/AccountsArrangementsResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "PayoffSavingsAccounts1BodyPayout" : {
        "type" : "object",
        "properties" : {
          "payOutSettlement" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes."
          },
          "payoutproperties" : {
            "type" : "array",
            "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccounts1BodyPayoutproperties"
            }
          },
          "payoutpropertyclasses" : {
            "type" : "array",
            "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccounts1BodyPayoutpropertyclasses"
            }
          },
          "reference" : {
            "type" : "array",
            "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyReference1"
            }
          }
        }
      },
      "AccountWithdrawalNoticeBody" : {
        "type" : "object",
        "properties" : {
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "noticeWithdrawal" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountWithdrawalNoticeBodyNoticeWithdrawal"
            }
          }
        }
      },
      "AccountSettlementResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/AccountProductResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/AccountSettlementResponseBodyProperties"
          }
        }
      },
      "AccountfacilitiesResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/CorporateAccountResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/AccountfacilitiesResponseBodyProperties"
          }
        }
      },
      "SavingsAccountBodyHolidayRestrictTypes" : {
        "type" : "object",
        "properties" : {
          "holidayRestrictType" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type."
          },
          "items" : {
            "type" : "array",
            "description" : "Contains the payment reference and details for each bulk record.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyItems"
            }
          }
        }
      },
      "AccountConditionsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountConditionsResponseBody"
          }
        },
        "description" : "AccountConditionsResponse"
      },
      "SavingsAccountBodyStatement" : {
        "type" : "object",
        "properties" : {
          "frequency" : {
            "maxLength" : 17,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies the frequency in which the payment application(periodic payments) execute the payment instruction."
          }
        }
      },
      "AccountCustomerResponseBodyProperties" : {
        "type" : "object",
        "properties" : {
          "limit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "customer" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesCustomer"
          },
          "statement" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          }
        }
      },
      "AccountChannel" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountChannelBody"
          }
        },
        "description" : "AccountChannel"
      },
      "SavingsAccountBodyRestrictionTexts" : {
        "type" : "object",
        "properties" : {
          "restrictionText" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Free text information to capture the reason for restriction applied on an account"
          }
        }
      },
      "Accountfacilities" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountfacilitiesBody"
          }
        },
        "description" : "Accountfacilities"
      },
      "AccountBalanceMigrationBodyBills" : {
        "type" : "object",
        "properties" : {
          "billId" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the bill reference or Id"
          },
          "originalAmount" : {
            "maxLength" : 19,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the original amount of the bill"
          },
          "outstandingAmount" : {
            "maxLength" : 19,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the aggregate outstanding principal amount thereof after giving effect to any borrowings and prepayments or repayments of Committed Loans"
          },
          "newBillAmount" : {
            "maxLength" : 19,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the outstanding bill amount after adjustment. This amount would be the sum of all the interest, account and charge property amount for all the payment types."
          },
          "delinquentAmount" : {
            "maxLength" : 19,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the bill amount during the ageing status(Bill which crossed the due date)"
          },
          "writeOffBill" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates whether to write off an entire bill amount. Allowed values are YES or NULL. If writeOff bill is defined as YES, it indicates that the entire bill will be written off."
          },
          "billAdjustmentNarrative" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the narration which is specific to the bill adjustment."
          },
          "billDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates a date on which a bill has been raised"
          },
          "paymentDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the date in which the payment will be sent out. Date in the format YYYYMMDD. E.g. 20191231"
          },
          "billType" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "The type of payment obligation generated"
          },
          "paymentType" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type"
          },
          "paymentMethod" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Method chosen to make the payment"
          },
          "paymentAmount" : {
            "maxLength" : 19,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the payment amount for the defined term, amount and payment frequency. It will include principal, charge and interest"
          },
          "properties" : {
            "type" : "array",
            "description" : "Id of the product property",
            "items" : {
              "$ref" : "#/components/schemas/AccountBalanceMigrationBodyProperties"
            }
          }
        }
      },
      "SavingsAccountBodyAgentArrangementIds" : {
        "type" : "object",
        "properties" : {
          "agentArrangementId" : {
            "maxLength" : 17,
            "minLength" : 0,
            "type" : "string",
            "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution"
          }
        }
      },
      "AccountfacilitiesBody" : {
        "type" : "object",
        "properties" : {
          "partyIds" : {
            "type" : "array",
            "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyPartyIds"
            }
          },
          "partyRoles" : {
            "type" : "array",
            "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyPartyRoles"
            }
          },
          "agentCustomerIds" : {
            "type" : "array",
            "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAgentCustomerIds"
            }
          },
          "agentArrangementIds" : {
            "type" : "array",
            "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAgentArrangementIds"
            }
          },
          "agentRoles" : {
            "type" : "array",
            "description" : "The role of the 3rd party, select from standard list",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAgentRoles"
            }
          },
          "arrangmentId" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates an unique identifier of an account"
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "activityId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "currency" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the currency. E.g. USD, GBP etc"
          },
          "productVariation" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer"
          },
          "pricingSelection" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing."
          },
          "pricingPlan" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment"
          },
          "rewardsArrangementId" : {
            "maxLength" : 17,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)"
          },
          "tradeDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Standard date field which records trade date of the account"
          },
          "arrangementEffectiveDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "It is a date on/upon which an account is considered to take effect"
          },
          "reason" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the reason for performing the current activity"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "facility" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountfacilitiesBodyFacility"
            }
          }
        }
      },
      "PayoffCurrentAccounts1" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/PayoffCurrentAccounts1Body"
          }
        },
        "description" : "PayoffCurrentAccounts1"
      },
      "PayoffSavingsAccountsBodyFields" : {
        "type" : "object",
        "properties" : {
          "fieldName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "The name of the field"
          },
          "fieldValue" : {
            "maxLength" : 500,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the field value of the arrangement property"
          }
        }
      },
      "AccountSettlementBody" : {
        "type" : "object",
        "properties" : {
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "settlement" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodySettlement"
            }
          }
        }
      },
      "ArrangementErrorResponseBodyErrorDetails" : {
        "type" : "object",
        "properties" : {
          "fieldName" : {
            "type" : "string",
            "description" : "The name of the field"
          },
          "code" : {
            "type" : "string",
            "description" : "The identifier of the error message"
          },
          "message" : {
            "type" : "string",
            "description" : "The actual Transact error message "
          },
          "property" : {
            "type" : "string",
            "description" : "Id of the product property"
          }
        }
      },
      "AccountBillMigration" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountBillMigrationBody"
          }
        },
        "description" : "AccountBillMigration"
      },
      "AccountBranchResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/AccountBranchResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "AccountMigrationResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountMigrationResponseBody"
          }
        },
        "description" : "AccountMigrationResponse"
      },
      "SavingAccountResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/CorporateAccountResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/SavingAccountResponseBodyProperties"
          }
        }
      },
      "AccountWithdrawalNotice2Body" : {
        "type" : "object",
        "properties" : {
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "noticeWithdrawal" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountWithdrawalNoticeBodyNoticeWithdrawal"
            }
          }
        }
      },
      "AccountSimulation1" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountSimulation1Body"
          }
        },
        "description" : "AccountSimulation1"
      },
      "SavingsAccountBodyDefaultSettlementAccounts" : {
        "type" : "object",
        "properties" : {
          "defaultSettlementAccount" : {
            "maxLength" : 90,
            "minLength" : 0,
            "type" : "string",
            "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type"
          }
        }
      },
      "AccountInfoResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/QueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountInfoResponseBody"
          }
        },
        "description" : "AccountInfoResponse"
      },
      "PayoffSavingsAccountsResponseBodyArrangementActivity" : {
        "type" : "object",
        "properties" : {
          "customerIds" : {
            "type" : "array",
            "description" : "Identifier of the customer",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyCustomerIds"
            }
          },
          "properties" : {
            "type" : "array",
            "description" : "Id of the product property",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyProperties"
            }
          },
          "overrides" : {
            "type" : "array",
            "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyOverrides"
            }
          },
          "arrangementId" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates an unique identifier of an account"
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "masterArrangementId" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created."
          },
          "roleName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc."
          },
          "currencyId" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency."
          },
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "activityId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "transactionAmount" : {
            "maximum" : 19,
            "minimum" : 0,
            "type" : "number",
            "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency"
          },
          "reason" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the reason for performing the current activity"
          },
          "automaticRun" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "This field would be used during the Simulation scenarios. The following options are supported: 1. SIMULATE : The system would automatically trigger the Simulation the moment the simulated transaction is authorized. 2. EXECUTE : The system would automatically trigger the Execution of simulation the moment simulated transaction is authorized. It is assumed that the user would have simulated first before using this option. 3. DIRECT.EXECUTE: If the user does not want to do a two step process of simulating and executing, then this option may be utilized which does both actions in one go"
          },
          "simulationRunReference" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the runner Reference ID for simulation activity"
          },
          "synchronous" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates that this simulation capture is a synchronous request"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "PayloadHeader" : {
        "type" : "object",
        "properties" : {
          "audit" : {
            "$ref" : "#/components/schemas/PayloadHeaderAudit"
          }
        }
      },
      "AccountInterestConditions" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountInterestConditionsBody"
          }
        },
        "description" : "AccountInterestConditions"
      },
      "AccountWithdrawalNotice2" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountWithdrawalNotice2Body"
          }
        },
        "description" : "AccountWithdrawalNotice2"
      },
      "AccountWithdrawalNotice1" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountWithdrawalNotice1Body"
          }
        },
        "description" : "AccountWithdrawalNotice1"
      },
      "AccountBillMigrationResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/AccountProductResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/AccountBalanceMigrationResponseBodyProperties"
          }
        }
      },
      "PayoffSavingsAccountsResponse1" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/PayoffSavingsAccountsResponse1Body"
          }
        },
        "description" : "PayoffSavingsAccountsResponse1"
      },
      "AccountAdjustment" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountAdjustmentBody"
          }
        },
        "description" : "AccountAdjustment"
      },
      "SystemArrangementErrorResponseBody" : {
        "type" : "object",
        "properties" : {
          "errorDetails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SystemArrangementErrorResponseBodyErrorDetails"
            }
          },
          "type" : {
            "type" : "string",
            "description" : "The identifier of error type: System"
          }
        }
      },
      "ArrangementHeaderAudit" : {
        "type" : "object",
        "properties" : {
          "T24_time" : {
            "type" : "integer",
            "description" : "Time taken to response by Transact",
            "format" : "int32"
          },
          "versionNumber" : {
            "type" : "string",
            "description" : "The CURR.NO. of the record"
          },
          "requestParse_time" : {
            "type" : "number",
            "description" : "Time taken to parse the request by IRIS"
          },
          "responseParse_time" : {
            "type" : "number",
            "description" : "Time taken to parse the response by IRIS"
          }
        }
      },
      "AccountDormancyStatusResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountDormancyStatusResponseBody"
          }
        },
        "description" : "AccountDormancyStatusResponse"
      },
      "SavingsAccountResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyProperties"
          }
        }
      },
      "PayoffCurrentAccounts1Body" : {
        "type" : "object",
        "properties" : {
          "currencyId" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency."
          },
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "activityId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "transactionAmount" : {
            "maximum" : 19,
            "minimum" : 0,
            "type" : "number",
            "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency"
          },
          "contractId" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the unique identifier of the transaction or contract which initiated the activity"
          },
          "systemId" : {
            "maxLength" : 6,
            "minLength" : 0,
            "type" : "string",
            "description" : "System ID of the originating transaction"
          },
          "externalEventStatus" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Determines the status of events sent to external system from the current system for the given activity"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "settlement" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccounts1BodySettlement"
            }
          }
        }
      },
      "SavingsAccountBodyLimit" : {
        "type" : "object",
        "properties" : {
          "secondaryLimit" : {
            "maxLength" : 4,
            "minLength" : 0,
            "type" : "string",
            "description" : "Monitors the availability and utilisation of secondary limits."
          },
          "secondaryLimitAmount" : {
            "maxLength" : 19,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the secondary limit amount to be used for the purpose of secondary limit check"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountWithdrawalNoticeResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountWithdrawalNoticeResponseBody"
          }
        },
        "description" : "AccountWithdrawalNoticeResponse"
      },
      "SavingsAccountsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/SavingsAccountsResponseBody"
          }
        },
        "description" : "SavingsAccountsResponse"
      },
      "AccountBranchResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountBranchResponseBody"
          }
        },
        "description" : "AccountBranchResponse"
      },
      "AccountBalanceMigrationBody" : {
        "type" : "object",
        "properties" : {
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "balanceMaintenance" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountBalanceMigrationBodyBalanceMaintenance"
            }
          }
        }
      },
      "PayoffCurrentAccountsResponse1Body" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/PayoffSavingsAccountsResponse1BodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/PayoffSavingsAccountsResponse1BodyProperties"
          }
        }
      },
      "AccountInterestConditionResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/CorporateAccountResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/AccountInterestConditionResponseBodyProperties"
          }
        }
      },
      "SavingsAccountResponseBodyPropertiesCustomer" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesLimitHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/SavingsAccountBodyCustomer"
          }
        }
      },
      "SavingsAccountBodyPeriodicAttributes" : {
        "type" : "object",
        "properties" : {
          "periodicAttribute" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the user defined rule definition which is evaluated during the transaction based on the defined period"
          },
          "repaymentHolidayLimit" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Customer is eligible for requesting payment holiday upto the limit amount specified here"
          }
        }
      },
      "SavingsAccountResponseBodyPropertiesInheritance" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritanceHeader"
          }
        }
      },
      "SavingsAccountBodyReferences" : {
        "type" : "object",
        "properties" : {
          "customType" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Defines the type of attribute used to calculate the custom rate. It is an identifier for the customized rate attributes. It may hold user defined values like currency"
          },
          "customName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Defines the name of the customized rate attribute to calculate the custom rate"
          },
          "customValue" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Defines the value for the corresponding customized rate attribute to calculate custom rate"
          }
        }
      },
      "AccountfacilitiesResponseBodyProperties" : {
        "type" : "object",
        "properties" : {
          "facility" : {
            "$ref" : "#/components/schemas/AccountfacilitiesResponseBodyPropertiesFacility"
          }
        }
      },
      "SavingsAccountResponseBodyPropertiesSchedule" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesLimitHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/SavingsAccountBodySchedule"
          }
        }
      },
      "AccountInterestConditionsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountInterestConditionsResponseBody"
          }
        },
        "description" : "AccountInterestConditionsResponse"
      },
      "SavingsAccountBodyPayout" : {
        "type" : "object",
        "properties" : {
          "payOutSettlementActivity" : {
            "maxLength" : 55,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the transaction type used for settlement of the payables"
          },
          "payOutSettlement" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Flag to indicate whether Payout Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes."
          },
          "payOutRule" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the rule on which the system should utilise the funds available in the pay out account during the settlement process"
          },
          "payOutRCType" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the transaction type used by the transaction recycler to settle the bills particularly for retrying the credits. For example, values are AA, ACFA, etc."
          },
          "payOutRCCondition" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the transaction recycling rules which define the set of retry conditions for settle the credits. For example, Monthly, Weekly or Daily."
          },
          "propertyClass" : {
            "type" : "array",
            "description" : "Condition that is used to build a product",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyPropertyClass"
            }
          },
          "property" : {
            "type" : "array",
            "description" : "Id of the product property",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyProperty1"
            }
          },
          "reference" : {
            "type" : "array",
            "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyReference1"
            }
          }
        }
      },
      "SavingAccountResponseBodyProperties" : {
        "type" : "object",
        "properties" : {
          "inheritance" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "limit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xisa" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xrateSetup" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xtxlimit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xisPoolid" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xira" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "balance" : {
            "$ref" : "#/components/schemas/CorporateAccountResponseBodyPropertiesBalance"
          },
          "activityCharges" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "messaging" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "arrangementRules" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "productQualifierNotice" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "agentCommission" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "rewardsPoints" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "alerts" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "balanceAvailability" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "renewal" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "txnfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "minbalfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "bonus" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "closurefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "dormancyfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "mgmtfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "cardissuefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "limitfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "payfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "returnfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "nsfreversalfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "noticefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "cashback" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "forcecapitalise" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "customer" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "crinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "officers" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "schedule" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "poNotice" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "periodiccharges" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "prefpricing" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "settlement" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "tax" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "payoff" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "dormancy" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "facility" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "statement" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "constraint" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "accreporting" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          }
        }
      },
      "CurrentAccountsResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/CurrentAccountsResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/CurrentAccountsResponseBodyProperties"
          }
        }
      },
      "AccountAdjustmentResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountAdjustmentResponseBody"
          }
        },
        "description" : "AccountAdjustmentResponse"
      },
      "SavingsAccountBodyProperties" : {
        "type" : "object",
        "properties" : {
          "minimumPaymentProperty" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Defines the list of properties which will be used for minimum payment amount calculation"
          }
        }
      },
      "SavingsAccountsResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/PayoffSavingsAccountsResponse1BodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "ForwardEntriesResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ForwardEntriesResponseQueryHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/ForwardEntriesResponseBody"
          }
        },
        "description" : "ForwardEntriesResponse"
      },
      "CorporateAccountResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CorporateAccountResponseBody"
          }
        },
        "description" : "CorporateAccountResponse"
      },
      "AccountSettlement" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountSettlementBody"
          }
        },
        "description" : "AccountSettlement"
      },
      "PayoffSavingsAccountsResponse1BodyPropertiesSettlement" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesLimitHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/PayoffSavingsAccounts1BodySettlement"
          }
        }
      },
      "PayoffCurrentAccountsResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/PayoffSavingsAccountsResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/PayoffSavingsAccountsResponseBodyProperties"
          }
        }
      },
      "AccountDebit" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountDebitBody"
          }
        },
        "description" : "AccountDebit"
      },
      "AccountWithdrawalNoticeBodyNoticeWithdrawal" : {
        "type" : "object",
        "properties" : {
          "noticeAmount" : {
            "maxLength" : 18,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies the maximum local currency amount that can be withdrawn in a single transaction without incurring an override"
          },
          "startDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the date on which the transaction or payment gets initiated."
          },
          "billId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the bill reference or Id"
          },
          "noticeReference" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the notice reference number. Possible values can be retrieved through the API, 'v4.3.0/holdings/arrangements/{arrangementId}/noticeUpdates'."
          },
          "noticeType" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies the type of notice like 'Blank/withdrawal' notice or 'Closure' notice."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountSimulation1Body" : {
        "type" : "object",
        "properties" : {
          "customerIds" : {
            "type" : "array",
            "description" : "Identifier of the customer",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyCustomerIds"
            }
          },
          "properties" : {
            "type" : "array",
            "description" : "Id of the product property",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyProperties"
            }
          },
          "overrides" : {
            "type" : "array",
            "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyOverrides"
            }
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "masterArrangementId" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created."
          },
          "roleName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc."
          },
          "currencyId" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency."
          },
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "activityId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "transactionAmount" : {
            "maximum" : 19,
            "minimum" : 0,
            "type" : "number",
            "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency"
          },
          "reason" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the reason for performing the current activity"
          },
          "automaticRun" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "This field would be used during the Simulation scenarios. The following options are supported: 1. SIMULATE : The system would automatically trigger the Simulation the moment the simulated transaction is authorized. 2. EXECUTE : The system would automatically trigger the Execution of simulation the moment simulated transaction is authorized. It is assumed that the user would have simulated first before using this option. 3. DIRECT.EXECUTE: If the user does not want to do a two step process of simulating and executing, then this option may be utilized which does both actions in one go"
          },
          "simulationRunReference" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the runner Reference ID for simulation activity"
          },
          "synchronous" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates that this simulation capture is a synchronous request"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountWithdrawalNotice1Body" : {
        "type" : "object",
        "properties" : {
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "noticeWithdrawal" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountWithdrawalNoticeBodyNoticeWithdrawal"
            }
          }
        }
      },
      "AccountWithdrawalNoticeResponseBodyPropertiesNoticeWithdrawal" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesLimitHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountWithdrawalNoticeBodyNoticeWithdrawal"
          }
        }
      },
      "SavingsAccountResponseBodyActivities" : {
        "type" : "object",
        "properties" : {
          "{activityName}" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivitiesactivityName"
          }
        }
      },
      "SystemArrangementErrorResponseBodyErrorDetails" : {
        "type" : "object",
        "properties" : {
          "fieldName" : {
            "type" : "string",
            "description" : "The name of the field"
          },
          "code" : {
            "type" : "string",
            "description" : "The identifier of the error message"
          },
          "message" : {
            "type" : "string",
            "description" : "The actual Transact error message caused by server"
          },
          "property" : {
            "type" : "string",
            "description" : "Id of the product property"
          }
        }
      },
      "SavingsAccountBodyInterest" : {
        "type" : "object",
        "properties" : {
          "dayBasis" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the day basis on which the interest is calculated. Eg: 366/366, 360/365 (Interest days/days in the year)"
          },
          "effectiveRate" : {
            "maxLength" : 19,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the actual interest rate applied for the account after adjustment/tier calculation/based on basic or Periodic index value"
          },
          "tierAmount" : {
            "maxLength" : 19,
            "minLength" : 0,
            "type" : "string",
            "description" : "The monetary amount for the tier."
          },
          "tierNegativeRate" : {
            "maxLength" : 12,
            "minLength" : 0,
            "type" : "string",
            "description" : "A negative interest rate can be applied at each tier, select Yes, No, Block margin"
          },
          "tierPercent" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Applicable tier percentage (between 0 and 100) for interest calculations based on amount bands"
          },
          "margins" : {
            "type" : "array",
            "description" : "Defines whether there are single or multiple margins to be considered while arriving at the applicable interest rate  Allowed values:  null (default): multiple margins may be defined SINGLE: only a single margin is allowed",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyMargins"
            }
          }
        }
      },
      "ArrangementErrorResponseBody" : {
        "type" : "object",
        "properties" : {
          "errorDetails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ArrangementErrorResponseBodyErrorDetails"
            }
          },
          "type" : {
            "type" : "string",
            "description" : "The identifier of error type: "
          }
        }
      },
      "MudarabaSavingAccountBody" : {
        "type" : "object",
        "properties" : {
          "partyIds" : {
            "type" : "array",
            "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyPartyIds"
            }
          },
          "partyRoles" : {
            "type" : "array",
            "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyPartyRoles"
            }
          },
          "agentCustomerIds" : {
            "type" : "array",
            "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAgentCustomerIds"
            }
          },
          "agentArrangementIds" : {
            "type" : "array",
            "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAgentArrangementIds"
            }
          },
          "agentRoles" : {
            "type" : "array",
            "description" : "The role of the 3rd party, select from standard list",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAgentRoles"
            }
          },
          "arrangmentId" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates an unique identifier of an account"
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "activityId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "currency" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the currency. E.g. USD, GBP etc"
          },
          "productVariation" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer"
          },
          "pricingSelection" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing."
          },
          "pricingPlan" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment"
          },
          "rewardsArrangementId" : {
            "maxLength" : 17,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)"
          },
          "tradeDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Standard date field which records trade date of the account"
          },
          "arrangementEffectiveDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "It is a date on/upon which an account is considered to take effect"
          },
          "reason" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the reason for performing the current activity"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "balance" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CorporateAccountBodyBalance"
            }
          }
        }
      },
      "SavingsAccountBodyProperty1" : {
        "type" : "object",
        "properties" : {
          "payOutProperty" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed"
          }
        }
      },
      "PayoffSavingsAccounts1BodyRepayment" : {
        "type" : "object",
        "properties" : {
          "payInSettlement" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Flag to indicate whether Payin Settlement instruction is required or not.Valid input is Yes or No.Default value is Yes."
          },
          "payInRCType" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the transaction type used by the transaction recycler for retrying the debits"
          },
          "payInRCCondition" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the transaction recycling rules which define the set of retry conditions"
          },
          "paymentTypes" : {
            "type" : "array",
            "description" : "Indicates if the payment is Customer (C) type or Bank (B) type",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyPaymentTypes"
            }
          },
          "reference" : {
            "type" : "array",
            "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyReference"
            }
          }
        }
      },
      "SavingsAccountResponseBodyPropertiesStatement" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesLimitHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/SavingsAccountBodyStatement2"
          }
        }
      },
      "AccountLobBody" : {
        "type" : "object",
        "properties" : {
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "lineOfBusiness" : {
            "maxLength" : 4,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the line of business in which the activity was performed. If pricing is not determined based on line of business, then this is not significant."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "CorporateAccountResponseBodyPropertiesBalance" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesLimitHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CorporateAccountBodyBalance"
          }
        }
      },
      "PayoffSavingsAccounts1BodyPayoutproperties" : {
        "type" : "object",
        "properties" : {
          "payoutproperty" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the different payout options, for example management charge, principal interest or commitment on which the payout settlement instructions would be processed"
          }
        }
      },
      "SavingsAccountBodySchedule" : {
        "type" : "object",
        "properties" : {
          "payment" : {
            "type" : "array",
            "description" : "Indicates the initiation of payment for an account",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyPayment"
            }
          },
          "holidayRestrictTypes" : {
            "type" : "array",
            "description" : "Indicates the type of holiday restriction which will be applied. Allowed values are PropertyClass, Property, Bill Type, Payment Type.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyHolidayRestrictTypes"
            }
          },
          "periodicAttributes" : {
            "type" : "array",
            "description" : "Contains the user defined rule definition which is evaluated during the transaction based on the defined period",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyPeriodicAttributes"
            }
          },
          "minimumPayments" : {
            "type" : "array",
            "description" : "Indicates the minimum payment related values such as minimum payment property, minum payment amount and minimum payment bill type",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyMinimumPayments"
            }
          },
          "amortisationTerm" : {
            "maxLength" : 4,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the amortisation term. When specified, the repayment amount is calculated based on the amortisation term insteam of the account term. When the amortisation term is less than account term, there will be a residual amount to be paid at the maturity."
          },
          "residualAmount" : {
            "maxLength" : 18,
            "minLength" : 0,
            "type" : "string",
            "description" : "The amount to be paid at the maturity date"
          },
          "baseDayKey" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates whether the cycling of dates should follow the base day calculation or not. Allowed values are BASE, PREVIOUS, NULL. BASE - Base day calculation will be applied. PREVIOUS/NULL - Base day calculation will not be applied"
          },
          "combineBills" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates if bills of same due date and same pament method(DUE or CAPITALISE) should be combined"
          },
          "recalcFrequency" : {
            "maxLength" : 38,
            "minLength" : 0,
            "type" : "string",
            "description" : "This defines the payment schedule amount recalculation frequency"
          },
          "includeFutureDisbursement" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Flag to indicate if future disbursements scheduled need to be considered when deriving the constant payment amounts. If set to YES then system will arrive at a constant amount from start date until maturity date of the contract considering any disbursements and payments scheduled for future dates and interest on the outstanding principal amount and then arrives at a calculated amount. If set to NULL, the calculated amount will not consider these future disbursements and payments scheduled in its calculation"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "CurrentAccountsResponse1" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CurrentAccountsResponse1Body"
          }
        },
        "description" : "CurrentAccountsResponse1"
      },
      "AccountMigration" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountMigrationBody"
          }
        },
        "description" : "AccountMigration"
      },
      "AccountBillMigrationBody" : {
        "type" : "object",
        "properties" : {
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "balanceMaintenance" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountBalanceMigrationBodyBalanceMaintenance"
            }
          }
        }
      },
      "SavingsAccountBodyReferalCodes" : {
        "type" : "object",
        "properties" : {
          "referalCode" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the conditions under which account details or details of entries over the account are to be included in an end of day report for referral to the account officer responsible. Referral conditions can be defined depending on transaction such as transaction code, amount and sign, or the balance of the Account."
          }
        }
      },
      "MudarabaSavingAccountResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/MudarabaSavingAccountResponseBody"
          }
        },
        "description" : "MudarabaSavingAccountResponse"
      },
      "PayoffSavingsAccounts1BodyPayoutpropertyclasses" : {
        "type" : "object",
        "properties" : {
          "payoutpropertyclass" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the different payout options, for example charge, interest or principal on which the payout settlement instructions would be processed"
          }
        }
      },
      "SavingsAccountBodyMessageTime" : {
        "type" : "object",
        "properties" : {
          "messageTime" : {
            "maxLength" : 5,
            "minLength" : 0,
            "type" : "string",
            "description" : "Denotes the time in which the message will be sent automatically"
          }
        }
      },
      "AccountConditionsBody" : {
        "type" : "object",
        "properties" : {
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "limit" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyLimit"
            }
          },
          "balance" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountSimulationBodyBalance"
            }
          },
          "customer" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyCustomer"
            }
          },
          "crinterest" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyCrinterest"
            }
          },
          "schedule" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodySchedule"
            }
          },
          "settlement" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodySettlement"
            }
          },
          "statement" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyStatement2"
            }
          }
        }
      },
      "SavingsAccountBodyStatement2" : {
        "type" : "object",
        "properties" : {
          "statement" : {
            "type" : "array",
            "description" : "Contains the details of account statement first cycle. It includes addon, participant account, lead account, print type, print attribute name, print attribute value, etc.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyStatement"
            }
          },
          "swift" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodySwift"
            }
          },
          "printAttributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyPrintAttributes"
            }
          },
          "statement2" : {
            "type" : "array",
            "description" : "Contains the details account statement second cycle. It includes addon, participant account, lead account, print type, print attribute name, print attribute value, etc.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyStatement2"
            }
          },
          "message" : {
            "type" : "array",
            "description" : "Specifies the record ID of parent message. ",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyMessage"
            }
          },
          "messageTime" : {
            "type" : "array",
            "description" : "Denotes the time in which the message will be sent automatically",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyMessageTime"
            }
          },
          "statementInformation" : {
            "type" : "array",
            "description" : "Specifies the component whose information will have to be printed in Account Statement",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyStatementInformation"
            }
          },
          "interestStatement" : {
            "type" : "array",
            "description" : "Indicates the category of the interest statement. For example, Monthly, Quarterly or Yearly.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyInterestStatement"
            }
          },
          "specialStatementFrequency" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "It indicates the request for a special statement any day for cycle 1 without affecting the regular statements of the cycle"
          },
          "ifNoMovement" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies whether or not Cycle1 Statements should be printed if there have been no movements over the Account since the last statement. Possible values are YES, NO , IF.0.BALANCE"
          },
          "descriptiveStatement" : {
            "maxLength" : 2,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies whether or not statements should include any customer details entered at the time of contract creation"
          },
          "startDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the date on which the transaction or payment gets initiated."
          },
          "debitFloorLimit" : {
            "maxLength" : 19,
            "minLength" : 0,
            "type" : "string",
            "description" : "It indicates the floor limit value for the debit transaction on the Interim Transaction Report, and is used to exclude smaller entries from the message details. On this message when only one value is used, the floor limit applies to both debit and credit amounts. If left blank then a value of zero is used which means all entries are detailed."
          },
          "creditFloorLimit" : {
            "maxLength" : 19,
            "minLength" : 0,
            "type" : "string",
            "description" : "It indicates the floor limit value for the credit transaction on the interim transaction report, and is used to exclude smaller entries from the message details"
          },
          "taxAdvice" : {
            "maxLength" : 2,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates whether the tax advice needs to be sent or not"
          },
          "rateInfoRoutine" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "It defines the hooks to be executed for converting the interest rate"
          },
          "interestScale" : {
            "maxLength" : 2,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies whether or not a detailed interest statement (scale) should be produced whenever interest is applied."
          },
          "interestClosingAdvice" : {
            "maxLength" : 2,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies whether or not an advice should be produced when interest and charges are applied."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "SavingsAccountBodyStatement1" : {
        "type" : "object",
        "properties" : {
          "property" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the product property"
          },
          "intStmtFreq11" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies frequency for producing the interest statement"
          }
        }
      },
      "AccountLimitResponseBodyProperties" : {
        "type" : "object",
        "properties" : {
          "limit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesLimit"
          }
        }
      },
      "AccountPayoffAutoSimulationBodyPayin" : {
        "type" : "object",
        "properties" : {
          "repaymentAccountId" : {
            "maxLength" : 90,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies the account from which the settlement is transferred for the asset finance contract."
          },
          "beneficiaryId" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the the participant beneficiary account details for cash outflow. Account indicated in the beneficiary will be used to credit participant shares upon borrower repayment. Allowed value should be a valid beneficiary in the system"
          }
        }
      },
      "PayoffCurrentAccounts" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/PayoffCurrentAccountsBody"
          }
        },
        "description" : "PayoffCurrentAccounts"
      },
      "AccountCreditResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/PayoffSavingsAccountsResponse1BodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "AccountSettlementResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountSettlementResponseBody"
          }
        },
        "description" : "AccountSettlementResponse"
      },
      "AccountDetailsResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AccountDetailsResponseBodyInner"
        }
      },
      "SavingsAccountBodyPartyRoles" : {
        "type" : "object",
        "properties" : {
          "partyRole" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the identifier used for the role played by the party or customer in the contract or account"
          }
        }
      },
      "CorporateAccountResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/CorporateAccountResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "$ref" : "#/components/schemas/CorporateAccountResponseBodyProperties"
          }
        }
      },
      "SavingsAccountBodyProperty" : {
        "type" : "object",
        "properties" : {
          "propertyId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "The identifier of the product condition"
          }
        }
      },
      "AccountScheduleResponseBodyProperties" : {
        "type" : "object",
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesSchedule"
          },
          "inhSchedule" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "settlement" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          }
        }
      },
      "PayoffCurrentAccountsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/PayoffCurrentAccountsResponseBody"
          }
        },
        "description" : "PayoffCurrentAccountsResponse"
      },
      "PayoffSavingsAccountsResponse1BodyArrangementActivity" : {
        "type" : "object",
        "properties" : {
          "arrangementId" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates an unique identifier of an account"
          },
          "currencyId" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency."
          },
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "activityId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "transactionAmount" : {
            "maximum" : 19,
            "minimum" : 0,
            "type" : "number",
            "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency"
          },
          "contractId" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the unique identifier of the transaction or contract which initiated the activity"
          },
          "systemId" : {
            "maxLength" : 6,
            "minLength" : 0,
            "type" : "string",
            "description" : "System ID of the originating transaction"
          },
          "externalEventStatus" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Determines the status of events sent to external system from the current system for the given activity"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountResponseBody"
          }
        },
        "description" : "AccountResponse"
      },
      "AccountPayoffAutoSimulationBody" : {
        "type" : "object",
        "properties" : {
          "customerIds" : {
            "type" : "array",
            "description" : "Identifier of the customer",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyCustomerIds"
            }
          },
          "properties" : {
            "type" : "array",
            "description" : "Id of the product property",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyProperties"
            }
          },
          "overrides" : {
            "type" : "array",
            "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyOverrides"
            }
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "masterArrangementId" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created."
          },
          "roleName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc."
          },
          "currencyId" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency."
          },
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "activityId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "transactionAmount" : {
            "maximum" : 19,
            "minimum" : 0,
            "type" : "number",
            "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency"
          },
          "reason" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the reason for performing the current activity"
          },
          "automaticRun" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "This field would be used during the Simulation scenarios. The following options are supported: 1. SIMULATE : The system would automatically trigger the Simulation the moment the simulated transaction is authorized. 2. EXECUTE : The system would automatically trigger the Execution of simulation the moment simulated transaction is authorized. It is assumed that the user would have simulated first before using this option. 3. DIRECT.EXECUTE: If the user does not want to do a two step process of simulating and executing, then this option may be utilized which does both actions in one go"
          },
          "simulationRunReference" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the runner Reference ID for simulation activity"
          },
          "synchronous" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates that this simulation capture is a synchronous request"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "settlement" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountPayoffAutoSimulationBodySettlement"
            }
          },
          "payoff" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountPayoffAutoSimulationBodyPayoff"
            }
          }
        }
      },
      "AccountStatement" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountStatementBody"
          }
        },
        "description" : "AccountStatement"
      },
      "AccountInfoResponseBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/AccountInfoResponseBodyInner"
        }
      },
      "AccountPayout" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountPayoutBody"
          }
        },
        "description" : "AccountPayout"
      },
      "BusinessAccountResponseBodyPropertiesBalance" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesLimitHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/BusinessAccountBodyBalance"
          }
        }
      },
      "AccountDormancyStatusBody" : {
        "type" : "object",
        "properties" : {
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountLobResponseBody" : {
        "type" : "object",
        "properties" : {
          "arrangementActivity" : {
            "$ref" : "#/components/schemas/AccountLobResponseBodyArrangementActivity"
          },
          "activities" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyActivities"
          },
          "properties" : {
            "type" : "object",
            "properties" : { }
          }
        }
      },
      "QueryHeader" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Status of the API(success/failed)"
          },
          "audit" : {
            "$ref" : "#/components/schemas/ArrangementHeaderAudit"
          },
          "page_size" : {
            "type" : "integer",
            "description" : "The total number of records per page",
            "format" : "int32"
          },
          "page_start" : {
            "type" : "integer",
            "description" : "The record from which the response should be displayed",
            "format" : "int32"
          },
          "total_size" : {
            "type" : "integer",
            "description" : "The total number of records present",
            "format" : "int32"
          },
          "page_token" : {
            "type" : "string",
            "description" : "Unique id expected to get as part of response from Transact on every enquiry request"
          }
        }
      },
      "PayoffSavingsAccountsResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/PayoffSavingsAccountsResponseBody"
          }
        },
        "description" : "PayoffSavingsAccountsResponse"
      },
      "SystemArrangementErrorResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "error" : {
            "$ref" : "#/components/schemas/SystemArrangementErrorResponseBody"
          }
        },
        "description" : "SystemArrangementErrorResponse"
      },
      "SavingAccountBody" : {
        "type" : "object",
        "properties" : {
          "partyIds" : {
            "type" : "array",
            "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyPartyIds"
            }
          },
          "partyRoles" : {
            "type" : "array",
            "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyPartyRoles"
            }
          },
          "agentCustomerIds" : {
            "type" : "array",
            "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAgentCustomerIds"
            }
          },
          "agentArrangementIds" : {
            "type" : "array",
            "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAgentArrangementIds"
            }
          },
          "agentRoles" : {
            "type" : "array",
            "description" : "The role of the 3rd party, select from standard list",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAgentRoles"
            }
          },
          "arrangmentId" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates an unique identifier of an account"
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "activityId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "currency" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the currency. E.g. USD, GBP etc"
          },
          "productVariation" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer"
          },
          "pricingSelection" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing."
          },
          "pricingPlan" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment"
          },
          "rewardsArrangementId" : {
            "maxLength" : 17,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)"
          },
          "tradeDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Standard date field which records trade date of the account"
          },
          "arrangementEffectiveDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "It is a date on/upon which an account is considered to take effect"
          },
          "reason" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the reason for performing the current activity"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "balance" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CorporateAccountBodyBalance"
            }
          }
        }
      },
      "AccountChannelBody" : {
        "type" : "object",
        "properties" : {
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "channel" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the channel in which the activity was performed. If pricing is not determined based on channel, then this is not significant"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountfacilitiesBodyFacility" : {
        "type" : "object",
        "properties" : {
          "services" : {
            "type" : "array",
            "description" : "It specifies the list of services related to the arrangement.",
            "items" : {
              "$ref" : "#/components/schemas/AccountfacilitiesBodyServices"
            }
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "SavingsAccountBodyShortTitles" : {
        "type" : "object",
        "properties" : {
          "accountName" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Display name or short name of the account specified."
          }
        }
      },
      "SavingAccount" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/SavingAccountBody"
          }
        },
        "description" : "SavingAccount"
      },
      "AccountBalanceMigrationResponseBodyProperties" : {
        "type" : "object",
        "properties" : {
          "balanceMaintenance" : {
            "$ref" : "#/components/schemas/AccountBalanceMigrationResponseBodyPropertiesBalanceMaintenance"
          }
        }
      },
      "SavingsAccount" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/SavingsAccountBody"
          }
        },
        "description" : "SavingsAccount"
      },
      "AccountfacilitiesBodyServices" : {
        "type" : "object",
        "properties" : {
          "service" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "Unique id of the service"
          },
          "serviceAvailability" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "It will indicate whether the corresponding service is available for arrangement account"
          },
          "customerOption" : {
            "maxLength" : 7,
            "minLength" : 0,
            "type" : "string",
            "description" : "It will indicate whether user has opted the service or not."
          }
        }
      },
      "AccountPayoffAutoSimulationBodySettlement" : {
        "type" : "object",
        "properties" : {
          "basicRepayment" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountPayoffAutoSimulationBodyBasicRepayment"
            }
          },
          "payin" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AccountPayoffAutoSimulationBodyPayin"
            }
          },
          "consolidatePayments" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies whether the settlement has to be combined for payments with same frequency, same beneficiary and same payment order product."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "SavingsAccountBodyStatementInformation" : {
        "type" : "object",
        "properties" : {
          "property" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the product property"
          }
        }
      },
      "SavingsAccountBodyReference" : {
        "type" : "object",
        "properties" : {
          "ddMandateReference" : {
            "maxLength" : 25,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the direct debit mandate reference (dd) when the settlement method is set to direct debit. The dd reference is typically the account number followed by a suffix, for example 15245.1"
          },
          "payInAccount" : {
            "maxLength" : 90,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the account from which funds are to be debited against the payment type"
          },
          "payInBeneficiary" : {
            "maxLength" : 17,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the beneficiary Id used for settlement of the bills due"
          },
          "payInPoProduct" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the payment order product Id for which the payment is initiated"
          },
          "payInPercentage" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the percentage of the payment amount used for settlement of the bills due"
          },
          "payInAmount" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the finite amount of the payment used for settlement of the bills due"
          },
          "payInActivity" : {
            "maxLength" : 55,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the transaction type used to debit the customer account for settlement of the bills due"
          }
        }
      },
      "AccountArrangementDetailsResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "arrangementId" : {
            "type" : "string",
            "description" : "Indicates an unique identifier of an account"
          },
          "accountId" : {
            "type" : "string",
            "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
          },
          "customerId" : {
            "maxLength" : 17,
            "type" : "string",
            "description" : "Identifier of the customer"
          },
          "beneficialOwner" : {
            "maxLength" : 35,
            "type" : "string",
            "description" : "Indicates the customer who is the legal owner of the arrangement and is the responsible customer of the contract with bank."
          },
          "productDescription" : {
            "type" : "string",
            "description" : "Indicates the description of the Product"
          },
          "arrangementStartDate" : {
            "type" : "string",
            "description" : "Indicates the date on which the arrangement was created"
          },
          "originalContractDate" : {
            "maxLength" : 11,
            "type" : "string",
            "description" : "Indicates the original contract date of the arrangement which was migrated from the legacy system."
          },
          "arrangementStatus" : {
            "maxLength" : 15,
            "type" : "string",
            "description" : "Status of the arrangement. E.g. AUTH, CLOSE, UNAUTH etc."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          }
        }
      },
      "AccountBranchResponseBodyArrangementActivity" : {
        "type" : "object",
        "properties" : {
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "branch" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the branch name/code in which the business activity was performed. If pricing is not determined based on branch, then this is not significant"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountPayoffAutoSimulationResponseBodyPropertiesSettlement" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesLimitHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountPayoffAutoSimulationBodySettlement"
          }
        }
      },
      "CurrentAccounts" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CurrentAccountsBody"
          }
        },
        "description" : "CurrentAccounts"
      },
      "AccountDormancyReactivationResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountDormancyReactivationResponseBody"
          }
        },
        "description" : "AccountDormancyReactivationResponse"
      },
      "CurrentAccountsResponseBodyPropertiesBalance" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesLimitHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/CurrentAccountsBodyBalance"
          }
        }
      },
      "ArrangementHeader" : {
        "type" : "object",
        "properties" : {
          "transactionStatus" : {
            "type" : "string",
            "description" : "The status of the transaction"
          },
          "aaaId" : {
            "type" : "string",
            "description" : "The Identifier of the aa record created"
          },
          "id" : {
            "type" : "string",
            "description" : "The Identifier of the record created"
          },
          "status" : {
            "type" : "string",
            "description" : "Status of the API(success/failed)"
          },
          "uniqueIdentifier" : {
            "type" : "string",
            "description" : "The unique identifier/Message Reference of the record created."
          },
          "audit" : {
            "$ref" : "#/components/schemas/ArrangementHeaderAudit"
          }
        }
      },
      "AccountInterestConditionBody" : {
        "type" : "object",
        "properties" : {
          "partyIds" : {
            "type" : "array",
            "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyPartyIds"
            }
          },
          "partyRoles" : {
            "type" : "array",
            "description" : "Contains the identifier used for the role played by the party or customer in the contract or account",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyPartyRoles"
            }
          },
          "agentCustomerIds" : {
            "type" : "array",
            "description" : "The id of the 3rd party who sold the product on behalf of the institution.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAgentCustomerIds"
            }
          },
          "agentArrangementIds" : {
            "type" : "array",
            "description" : "The id of the arrangement with the 3rd party that has sold the product on behalf of the institution",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAgentArrangementIds"
            }
          },
          "agentRoles" : {
            "type" : "array",
            "description" : "The role of the 3rd party, select from standard list",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAgentRoles"
            }
          },
          "arrangmentId" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates an unique identifier of an account"
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "activityId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "currency" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifies the currency. E.g. USD, GBP etc"
          },
          "productVariation" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "It defines the type of a customer based on criteria defined by Bank, Eg: Gold Customer, Mobile Banking Customer"
          },
          "pricingSelection" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "If the account has an associated pricing arrangement, the way the pricing is applied is indicated from standard set of values - automatic, manual or No Pricing."
          },
          "pricingPlan" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the Pricing Plan of an account, it gives preferential interest rate/charge schedule based on customer segment"
          },
          "rewardsArrangementId" : {
            "maxLength" : 17,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the Rewards account id assigned to a financial account(Loans,Deposits)"
          },
          "tradeDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Standard date field which records trade date of the account"
          },
          "arrangementEffectiveDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "It is a date on/upon which an account is considered to take effect"
          },
          "reason" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the reason for performing the current activity"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "crinterest" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyCrinterest"
            }
          },
          "drinterest" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyCrinterest"
            }
          }
        }
      },
      "PayoffSavingsAccountsResponseBodyPropertiesSettlement" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesLimitHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/PayoffSavingsAccountsBodySettlement"
          }
        }
      },
      "AccountDebitResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountDebitResponseBody"
          }
        },
        "description" : "AccountDebitResponse"
      },
      "SavingsAccountBodyAgentRoles" : {
        "type" : "object",
        "properties" : {
          "agentRole" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "The role of the 3rd party, select from standard list"
          }
        }
      },
      "AccountBalanceMigrationResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountBalanceMigrationResponseBody"
          }
        },
        "description" : "AccountBalanceMigrationResponse"
      },
      "PayoffSavingsAccountsResponseBodyPropertiesPayoff" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesLimitHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyPayoff"
          }
        }
      },
      "BusinessAccountResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/BusinessAccountResponseBody"
          }
        },
        "description" : "BusinessAccountResponse"
      },
      "AccountPayoffAutoSimulationBodyAmount" : {
        "type" : "object",
        "properties" : {
          "fixedAmount" : {
            "maxLength" : 19,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the monetary amount that is fixed during the associated account's effective period"
          }
        }
      },
      "AccountBodyBalance" : {
        "type" : "object",
        "properties" : {
          "accountTitles" : {
            "type" : "array",
            "description" : "Short title on an account",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAccountTitles"
            }
          },
          "accountTitles2" : {
            "type" : "array",
            "description" : "Title line 2 that will appear in notice and statements",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAccountTitles2"
            }
          },
          "shortTitles" : {
            "type" : "array",
            "description" : "Contains the short title given to the name of an account or an arrangement",
            "items" : {
              "$ref" : "#/components/schemas/AccountSimulationBodyShortTitles"
            }
          },
          "postingRestrictions" : {
            "type" : "array",
            "description" : "Identifies any restrictions for posting entries that are to be imposed on the Account",
            "items" : {
              "$ref" : "#/components/schemas/AccountSimulationBodyPostingRestrictions"
            }
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountPayoutBody" : {
        "type" : "object",
        "properties" : {
          "currencyId" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency."
          },
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "activityId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "transactionAmount" : {
            "maximum" : 19,
            "minimum" : 0,
            "type" : "number",
            "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency"
          },
          "contractId" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the unique identifier of the transaction or contract which initiated the activity"
          },
          "systemId" : {
            "maxLength" : 6,
            "minLength" : 0,
            "type" : "string",
            "description" : "System ID of the originating transaction"
          },
          "externalEventStatus" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Determines the status of events sent to external system from the current system for the given activity"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "SavingsAccountResponseBodyActivitiesactivityName" : {
        "type" : "object",
        "properties" : {
          "activity" : {
            "type" : "string"
          },
          "transactionStatus" : {
            "type" : "string",
            "description" : "The status of the transaction"
          },
          "id" : {
            "type" : "string",
            "description" : "The Identifier of the record created"
          }
        }
      },
      "SavingsAccounts" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/SavingsAccountsBody"
          }
        },
        "description" : "SavingsAccounts"
      },
      "AccountsArrangementsBody" : {
        "type" : "object",
        "properties" : {
          "customerIds" : {
            "type" : "array",
            "description" : "Identifier of the customer",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyCustomerIds"
            }
          },
          "properties" : {
            "type" : "array",
            "description" : "Id of the product property",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyProperties"
            }
          },
          "overrides" : {
            "type" : "array",
            "description" : "The override message is captured  that was generated at the time of commitment of the transaction to the database.",
            "items" : {
              "$ref" : "#/components/schemas/PayoffSavingsAccountsBodyOverrides"
            }
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "masterArrangementId" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "The unique identifier to specify an arrangement reference which is act as a Master for the arrangement being created."
          },
          "roleName" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Name of the role or sub contract that is displayed, for eg: Payments Inputter, Administrator, Clerk and etc."
          },
          "currencyId" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the currency. This is the 3-letter ISO 4217 code of the currency."
          },
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "activityId" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the activity, e.g. ACCOUNTS-CAPITALISE-ACCHARGE*CARDISSUEFEE"
          },
          "transactionAmount" : {
            "maximum" : 19,
            "minimum" : 0,
            "type" : "number",
            "description" : "Contains the transaction amount. This is based on the currency, either local or foreign currency"
          },
          "reason" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the reason for performing the current activity"
          },
          "simulationRunReference" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the runner Reference ID for simulation activity"
          },
          "channel" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the channel in which the activity was performed. If pricing is not determined based on channel, then this is not significant"
          },
          "branch" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the branch name/code in which the business activity was performed. If pricing is not determined based on branch, then this is not significant"
          },
          "lineOfBusiness" : {
            "maxLength" : 4,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the line of business in which the activity was performed. If pricing is not determined based on line of business, then this is not significant."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "SavingsAccountBodyCustomers" : {
        "type" : "object",
        "properties" : {
          "customer" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the customer identifier to fetch list of consent arrangements for the customer or customer identifier of the debtor account. This will be populated once the SCA(Strong Customer Authentication) is completed."
          },
          "customerRole" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates role of a customer for an arrangement."
          },
          "taxLiabilityPercentage" : {
            "maxLength" : 12,
            "minLength" : 0,
            "type" : "string",
            "description" : "Tax liability percentage of the customer"
          },
          "limitAllocactionPercentage" : {
            "maxLength" : 12,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates percentage of limit allocated to the customer out of overall limit"
          },
          "GLAllocactionPercentage" : {
            "maxLength" : 12,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates GL allocation percentage of the customer"
          }
        }
      },
      "SavingsAccountBodyCrinterest" : {
        "type" : "object",
        "properties" : {
          "interest" : {
            "type" : "array",
            "description" : "Interest amount",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyInterest"
            }
          },
          "references" : {
            "type" : "array",
            "description" : "Indicates the transaction reference for which the history of transactions is requested. It is steered by the attribute 'booked' given the start date and end date or the entry from which the history is requested",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyReferences"
            }
          },
          "calcThreshold" : {
            "maxLength" : 19,
            "minLength" : 0,
            "type" : "string",
            "description" : "The user can specify that interest will only be calculated if a balance threshold is surpassed. For credit interest, the user can specify the minimum balance which must be maintained. For debit interest, the user can specify the maximum debit balance for which interest will not be calculated"
          },
          "accrualRule" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Determines the amounts which has to be included in each day's balance while accruing interest, the actual days to include in the period(eg: first day, last day) and how to round any calculations"
          },
          "compounding" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "This field defines the number of compounding periods to be applied.Compounding interest applies a factor to the compound interest calculation based upon the number of compounding periods in the year"
          },
          "compoundYieldMethod" : {
            "maxLength" : 8,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates how the effective rate is calculated, when set to YIELD the interest rate defined is taken as the annual effective rate"
          },
          "onThisActivity" : {
            "maxLength" : 80,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the activities which will necessiate a recalculation of the schedules, ex, change of term, principal increase, etc,."
          },
          "recalculate" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Recalculates the periodic rate when certain activities (e.g. LENDING-CHANGE-PRINCIPAL.INTEREST, LENDING-DISBURSE-COMMITMENT) is processed"
          },
          "minIntAmount" : {
            "maxLength" : 19,
            "minLength" : 0,
            "type" : "string",
            "description" : "Defines the minimum interest amount that will be compared to the system calculated interest amount. If the interest calculated is less than the minimum amount set, then based on the waive setup  either the min interest amount would be applied or it would be waived"
          },
          "minIntWaive" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "This field indicates if the calculated interest amount has to be waived or adjusted. If the field is set to YES, then the system will waive the interest amount if it is less than the minimum interest amount specified.If NULL value is set and if the calculated interest amount is less than the minimum interest amount  specified, then system will post the minimum interest amount"
          },
          "suppressAccrual" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates whether accruals needs to be Suppressed or Accrual should be done for the Alternate Interest Property. Allowed values are Yes, Alternate, info only, null"
          },
          "fixedRate" : {
            "maxLength" : 13,
            "minLength" : 0,
            "type" : "string",
            "description" : "Numeric value for the interest rate entered manually."
          },
          "floatingRate" : {
            "maxLength" : 4,
            "minLength" : 0,
            "type" : "string",
            "description" : "The interest rate is chosen from a selection of values which represent different interest types and rates."
          },
          "periodicIndex" : {
            "maxLength" : 4,
            "minLength" : 0,
            "type" : "string",
            "description" : "Denotes an index which points to the right period of the securities or holdings."
          },
          "periodicRate" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specify the period which will be used to fetch the interest rate"
          },
          "usagePercent" : {
            "maxLength" : 6,
            "minLength" : 0,
            "type" : "string",
            "description" : "The percent defined will be applied on the reference rate before applying margin and other interest adjustments"
          },
          "type" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "The product condition has an activity type associated that drives an action."
          },
          "period" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates spread of time buckets.Ex: 3M,6M,9M,10Y etc."
          },
          "method" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "A pricing plan can be applied to an account, the selection is automatic or manual"
          },
          "initialDate" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies the initial date from which the interest rate has to be reset. If specified along with a reset frequency, the initial reset date will be used for deriving the subsequent reset dates"
          },
          "reset" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "This indicates the reset period of the index stated. System would automatically reset the periodic rate at the frequency stated here"
          },
          "linkedRateIndicator" : {
            "maxLength" : 4,
            "minLength" : 0,
            "type" : "string",
            "description" : "The interest rate for the tier can be linked to that of another account, YES/NO indicator"
          },
          "operand" : {
            "maxLength" : 9,
            "minLength" : 0,
            "type" : "string",
            "description" : "This field along with fieldName and value, defines the conditions for the alert to be triggered."
          },
          "minimumTierRate" : {
            "maxLength" : 13,
            "minLength" : 0,
            "type" : "string",
            "description" : "A minimum interest rate can be applied at each tier."
          },
          "maximumTierRate" : {
            "maxLength" : 13,
            "minLength" : 0,
            "type" : "string",
            "description" : "The maximum rate that can be applied at each tier."
          },
          "rateTierType" : {
            "maxLength" : 6,
            "minLength" : 0,
            "type" : "string",
            "description" : "Different interest rates can be applied for tiers determined by monetary amounts.  Standard selection to choose from - Single, Level, Banded"
          },
          "linkedArrangement" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "The account which is linked for calculating interest that should be applied to this account"
          },
          "linkedProperty" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies the Interest component of the linked contract that should be referred for getting the Interest Rate"
          },
          "rfrConvention" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "Define the market convention to be used as risk free rate calculation convention"
          },
          "rfrLookbackType" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies the type to be used for risk free rates calculation. Allowed options are NARROW, OBSERVATION SHIFT. Narrow Definition: Apply original interest period’s day count to the look back rate used for this day (i.e. if the Wednesday rate is used for Friday, apply the Friday’s weight, three days, to Wednesday’s rate). Observation Shift: Apply the original day count of the look back rate (i.e. if the Wednesday rate is used for Friday, apply the Wednesday’s own weight, one day, and do not use Friday’s day count for it)"
          },
          "rfrCalculationMethod" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "Define the type of formula used to calculate the rate. There are two types.  1. Simple - Simple Average Calculation (Arithmetic Mean) 2. Compound -  Compound Average Calculation (geometric mean)"
          },
          "rfrLookbackDays" : {
            "maxLength" : 2,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies the backward looking period for the risk free rates calculation. Example – An arrangement is creating on 15-May-2020 with look back days as 2. Then during RFR compounding rate calculation, system would use the risk free rate published on 13-May-2020. So, it will look back to 2 days and get the rate"
          },
          "rfrSpreadTreatment" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "Define how the Spread inputted in the interest definition would be used as part of risk free rate calculation. Inclusive – The spread inputted in definition will be used in risk free rate formula itself to calculate the Compounding RFR rate. Exclusive – The spread inputted in the definition will be added on top of formula calculated Compounding RFR rate"
          },
          "rfrPeriodDayCount" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will uses the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate."
          },
          "rfrRoundingRule" : {
            "maxLength" : 20,
            "minLength" : 0,
            "type" : "string",
            "description" : "Determine how the risk free rates will be used  when calculating the compounding risk free rate. TODAY – The formula will use only risk free rate till TODAY from Period Start date, and calculate the Compounding rate.  FULL – The formula will use the risk free rates for FULL period from Period Start date to Period End date when calculating compounding rate. "
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "ArrangementErrorResponse" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/ArrangementHeader"
          },
          "error" : {
            "$ref" : "#/components/schemas/ArrangementErrorResponseBody"
          }
        },
        "description" : "ArrangementErrorResponse"
      },
      "AccountSimulationBodyBalance" : {
        "type" : "object",
        "properties" : {
          "accountTitles" : {
            "type" : "array",
            "description" : "Short title on an account",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAccountTitles"
            }
          },
          "accountTitles2" : {
            "type" : "array",
            "description" : "Title line 2 that will appear in notice and statements",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAccountTitles2"
            }
          },
          "shortTitles" : {
            "type" : "array",
            "description" : "Contains the short title given to the name of an account or an arrangement",
            "items" : {
              "$ref" : "#/components/schemas/AccountSimulationBodyShortTitles"
            }
          },
          "alternateIds" : {
            "type" : "array",
            "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
            "items" : {
              "$ref" : "#/components/schemas/AccountSimulationBodyAlternateIds"
            }
          },
          "businessDayCentres" : {
            "type" : "array",
            "description" : "The country or region code to be considered for determining the holidays and used while calculating the schedule dates.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyBusinessDayCentres"
            }
          },
          "referalCodes" : {
            "type" : "array",
            "description" : "Indicates the conditions under which account details or details of entries over the account are to be included in an end of day report for referral to the account officer responsible. Referral conditions can be defined depending on transaction such as transaction code, amount and sign, or the balance of the Account.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyReferalCodes"
            }
          },
          "postingRestrictions" : {
            "type" : "array",
            "description" : "Identifies any restrictions for posting entries that are to be imposed on the Account",
            "items" : {
              "$ref" : "#/components/schemas/AccountSimulationBodyPostingRestrictions"
            }
          },
          "aprTypes" : {
            "type" : "array",
            "description" : "Indicates the type of Annual Percentage Rate calculation selected for Reporting. Available options such as Cashflow,Interest",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAprTypes"
            }
          },
          "mnemonic" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Shortcut code for referring an Entity/Company/Branch."
          },
          "accountId" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the account. Often referred to as the account number, yet for consistency this is always referred to as accountId. Accepts both IBAN & BBAN"
          },
          "customerReference" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "description" : "The reference which is provided to the beneficiary/ creditor by the originator of payment"
          },
          "accountingCompany" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the accounting company of the account record"
          },
          "originationReference" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Identifier of the account in source system, eg, a origination system."
          },
          "category" : {
            "maxLength" : 5,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the account or contract product name. For example for an account this maybe current, savings etc."
          },
          "baseDateType" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Defines if anniversaryDate or start date is based on account creation or once disbursement is done. Allowed values are ARRANGEMENT and DISBURSEMENT. ARRANGEMENT indicates that account start period is considered as arrangement creation time. If set as DISBURSEMENT the account start period is based on disbursement activity date"
          },
          "anniversary" : {
            "maxLength" : 6,
            "minLength" : 0,
            "type" : "string",
            "description" : "The start or end period defined in MMDD format to indicate the period when charge rules has to be applied"
          },
          "dateConvention" : {
            "maxLength" : 18,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates how the schedule date has to be adjusted when the schedule falls on a holiday. Allowed values are BACKWARD, FORWARD, FORWARD SAME MONTH or CALENDAR."
          },
          "dateAdjustment" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "Defines the behavior when recurring payment dates falls on a weekend or bank holiday. The payment is then executed either the 'preceding' or 'following' working day. ASPSP might reject the request due to the communicated value, if rules in Online-Banking are not supporting this execution rule."
          },
          "portfolioId" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the portfolio or security account"
          },
          "inactiveMonths" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the number of months without customer activity before an account is declared as inactive"
          },
          "baseDateKey" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the option to specify the basis for deriving the future event dates.Allowed values are previous(last adjusted event date will be used for deriving) ,base(last unadjusted event date provided by user will be used for deriving and null(change product ,renewal event base date will be used for deriving)"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "SavingsAccountBodyUnrestrictionTexts" : {
        "type" : "object",
        "properties" : {
          "unrestrictionText" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Reason for unblocking the restriction set on an account"
          }
        }
      },
      "AccountStatementBody" : {
        "type" : "object",
        "properties" : {
          "effectiveDate" : {
            "type" : "string",
            "description" : "Contains the identifier for the transaction date. Dates are expected in ‘YYYYMMDD’ format",
            "format" : "date"
          },
          "productId" : {
            "maxLength" : 30,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the unique identifier of the product, e.g. the product id of the arrangement account."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          },
          "statement" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyStatement2"
            }
          }
        }
      },
      "PayoffSavingsAccounts" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/PayoffSavingsAccountsBody"
          }
        },
        "description" : "PayoffSavingsAccounts"
      },
      "SavingsAccountBodyMessage" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "The product condition has an activity type associated that drives an action."
          },
          "sendType" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "It denotes whether the sending of message MT941 (Balance Report) / MT942 (Interim Transaction Report) happens on an ad-hoc or timed daily basis."
          }
        }
      },
      "SavingsAccountBodySettlement" : {
        "type" : "object",
        "properties" : {
          "repayment" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyRepayment"
            }
          },
          "payout" : {
            "type" : "array",
            "description" : "Details of the concentration account to which the surplus funds available in the sweeping account is paid out to.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyPayout"
            }
          },
          "defaultSettlementAccounts" : {
            "type" : "array",
            "description" : "Default settlement account to be used for all incoming payments and outgoing settlements when a specific settlement account is not provided for each payment type.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyDefaultSettlementAccounts"
            }
          },
          "offset" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyOffset"
            }
          },
          "updatePendingRetry" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "If this field is set to YES, then whenever user changes the Payin settlement accounts then the modified accounts should affect the pending funding requests raised for the current overdue Bills. If this field is set to NO or blank then the changes to the payin settlement accounts apply to the next due bills"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountStatementResponse1BodyProperties" : {
        "type" : "object",
        "properties" : {
          "schedule" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "inhSchedule" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "statement" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesStatement"
          }
        }
      },
      "SavingsAccountResponseBodyProperties" : {
        "type" : "object",
        "properties" : {
          "inheritance" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "limit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesLimit"
          },
          "xisa" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xrateSetup" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xtxlimit" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xisPoolid" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "xira" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "balance" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesBalance"
          },
          "activityCharges" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "messaging" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "arrangementRules" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "productQualifierNotice" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "agentCommission" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "rewardsPoints" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "alerts" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "balanceAvailability" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "renewal" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "txnfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "minbalfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "bonus" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "closurefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "dormancyfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "mgmtfee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "cardissuefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "limitfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "payfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "returnfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "nsfreversalfees" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "noticefee" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "cashback" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "forcecapitalise" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "customer" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesCustomer"
          },
          "crinterest" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesCrinterest"
          },
          "officers" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "schedule" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesSchedule"
          },
          "poNotice" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "periodiccharges" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "prefpricing" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "settlement" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesSettlement"
          },
          "tax" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "payoff" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "dormancy" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "facility" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "statement" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesStatement"
          },
          "constraint" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          },
          "accreporting" : {
            "$ref" : "#/components/schemas/SavingsAccountResponseBodyPropertiesInheritance"
          }
        }
      },
      "BusinessAccountBodyBalance" : {
        "type" : "object",
        "properties" : {
          "alternateIds" : {
            "type" : "array",
            "description" : "An Alternate Identification for the Deal. This can be used to retrieve the Deal for amendment.",
            "items" : {
              "$ref" : "#/components/schemas/SavingsAccountBodyAlternateIds"
            }
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extensions"
          }
        }
      },
      "AccountMigrationBodyOriginationReference" : {
        "type" : "object",
        "properties" : {
          "contextName" : {
            "maxLength" : 45,
            "minLength" : 0,
            "type" : "string",
            "description" : "Field name returned by the payment engine (TPH) for information or further processing."
          },
          "contextValue" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "Field value returned by the payment engine (TPH) for information or further processing."
          }
        }
      },
      "AccountPayoffAutoSimulationBodyBasicRepayment" : {
        "type" : "object",
        "properties" : {
          "autoSettle" : {
            "maxLength" : 3,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates if the settlement is automatic at the Customer / Broker side"
          }
        }
      },
      "SavingsAccountBodyPartyIds" : {
        "type" : "object",
        "properties" : {
          "partyId" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Allows capturing of customers or person entities to be part of the relationship. If partyType is selected as Customer, then the system will allow only customer Ids to be captured into this field. If partyType is selected as Person or Entity, then system will allow only personEntity Ids to be captured into this field."
          }
        }
      },
      "AccountStatementResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "narratives" : {
            "type" : "array",
            "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference",
            "items" : {
              "type" : "object",
              "properties" : {
                "narrative" : {
                  "maxLength" : 150,
                  "type" : "string",
                  "description" : "The additional text printed on descriptive statements in addition to the standard narrative and/or reference"
                }
              }
            }
          },
          "bookingDate" : {
            "maxLength" : 11,
            "type" : "string",
            "description" : "Indicates the date on which this business activity is booked in the underlying system. The effective date and booking date could be different if systems allow forward/back dated business transactions. Dates are expected in YYYYMMDD format. If booking date is not passed, effective date would be assumed as booking date."
          },
          "transactionReference" : {
            "maxLength" : 25,
            "type" : "string",
            "description" : "Contains the identifier for the transaction in the core system"
          },
          "transactionCode" : {
            "maxLength" : 150,
            "type" : "string",
            "description" : "Identifies the system internal transaction code applicable to the transaction"
          },
          "valueDate" : {
            "maxLength" : 11,
            "type" : "string",
            "description" : "Indicates the value date on which the underlying accounting entry is to be given value (for interest purposes)"
          },
          "debitAmount" : {
            "maxLength" : 19,
            "type" : "string",
            "description" : "Amount to be debited in a payment transaction"
          },
          "creditAmount" : {
            "maxLength" : 19,
            "type" : "string",
            "description" : "Amount to be credited in a payment transaction"
          },
          "closingBalance" : {
            "maxLength" : 19,
            "type" : "string",
            "description" : "Closing balance of the arrangement"
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          }
        }
      },
      "AccountDormancyStatus" : {
        "type" : "object",
        "properties" : {
          "header" : {
            "$ref" : "#/components/schemas/PayloadHeader"
          },
          "body" : {
            "$ref" : "#/components/schemas/AccountDormancyStatusBody"
          }
        },
        "description" : "AccountDormancyStatus"
      },
      "AccountDetailsResponseBodyInner" : {
        "type" : "object",
        "properties" : {
          "sharedLimitAccounts" : {
            "type" : "array",
            "description" : "Denotes the accounts in which the credit card Limit is assigned to the customer across all the credit cards",
            "items" : {
              "type" : "object",
              "properties" : {
                "sharedLimitAccount" : {
                  "type" : "string",
                  "description" : "Denotes the accounts in which the credit card Limit is assigned to the customer across all the credit cards"
                },
                "sharedLimitAccountType" : {
                  "type" : "string",
                  "description" : "Indicates the type of shared limit account"
                }
              }
            }
          },
          "taxRates" : {
            "type" : "array",
            "description" : "Indicates tax charged to an account",
            "items" : {
              "type" : "object",
              "properties" : {
                "taxRate" : {
                  "type" : "string",
                  "description" : "Indicates tax charged to an account"
                }
              }
            }
          },
          "interests" : {
            "type" : "array",
            "description" : "Interest amount",
            "items" : {
              "type" : "object",
              "properties" : {
                "interestPropertyName" : {
                  "type" : "string",
                  "description" : "Contains the property name of loan interest such as penalty Interest and principal interest."
                },
                "interestCompoundType" : {
                  "type" : "string",
                  "description" : "Indicates the interest compound type of an account"
                },
                "interestCompoundTypeValue" : {
                  "type" : "string",
                  "description" : "Indicates the interest compound type value of an account"
                },
                "interestPaidYtd" : {
                  "type" : "number",
                  "description" : "Interest paid from the start of current year till current date"
                },
                "lastPaidInterestAmount" : {
                  "type" : "number",
                  "description" : "Indicates the interest received last"
                },
                "lastPaymentDate" : {
                  "type" : "string",
                  "description" : "Date last payment was made",
                  "format" : "date"
                },
                "accrualAmount" : {
                  "type" : "string",
                  "description" : "Indicates interest accumulated for an account for the defined time period"
                },
                "consolidateInterests" : {
                  "type" : "array",
                  "description" : "Contains the sum of the cash interest expense (including that attributable to Capitalized Leases), net of cash interest income, of the Borrower and the Restricted Subsidiaries, determined on a consolidated basis.",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "consolidateInterest" : {
                        "type" : "string",
                        "description" : "Contains the sum of the cash interest expense and net of cash interest income of the borrower and the restricted subsidiaries determined on a consolidated basis"
                      }
                    }
                  }
                }
              }
            }
          },
          "sharedInterestAccounts" : {
            "type" : "array",
            "description" : "Contains the account details which shares the interest among the eligible or joint customers.",
            "items" : {
              "type" : "object",
              "properties" : {
                "sharedInterestAccount" : {
                  "type" : "string",
                  "description" : "Contains the account details which shares the interest among the eligible or joint customers."
                },
                "sharedInterestAccountType" : {
                  "type" : "string",
                  "description" : "Indicates the type of shared interest account"
                }
              }
            }
          },
          "charges" : {
            "type" : "array",
            "description" : "The charges or fees for this transaction",
            "items" : {
              "type" : "object",
              "properties" : {
                "paymentFrequency" : {
                  "type" : "string",
                  "description" : "The frequency at which a payment is required to be generated"
                },
                "paymentTypeName" : {
                  "type" : "string",
                  "description" : "Indicates Payment type set to an account"
                },
                "propertyName" : {
                  "type" : "string",
                  "description" : "Indicates the  property description to which benefit has been applied"
                },
                "paymentMethod" : {
                  "type" : "string",
                  "description" : "Method chosen to make the payment"
                },
                "chargeSchedulePaymentValue" : {
                  "type" : "string",
                  "description" : "Indicates the payment frequency associated with the charge"
                }
              }
            }
          },
          "jointCustomers" : {
            "type" : "array",
            "description" : "Joint or related customer id",
            "items" : {
              "type" : "object",
              "properties" : {
                "customerName" : {
                  "type" : "string",
                  "description" : "Indicates the name of the customer. Originator is the party who requests the payment cancellation."
                },
                "customerId" : {
                  "type" : "string",
                  "description" : "Identifier of the customer"
                },
                "jointRelationRoleId" : {
                  "type" : "string",
                  "description" : "Role of joint customer with the main customer"
                },
                "jointRoleDisplayName" : {
                  "type" : "string",
                  "description" : "Description of the joint customer role."
                }
              }
            }
          },
          "allowedcurrencies" : {
            "type" : "array",
            "description" : "Field denotes the currency set as allowed currency in Master account conditions.",
            "items" : {
              "type" : "object",
              "properties" : {
                "allowedcurrency" : {
                  "type" : "string",
                  "description" : "Available currencies for the product"
                }
              }
            }
          },
          "openActualBalance" : {
            "type" : "number",
            "description" : "Contains the opening actual balance of an account"
          },
          "availableOverdraftLimit" : {
            "type" : "number",
            "description" : "Contains the overdraft limit still available to be utilized"
          },
          "openingDate" : {
            "type" : "string",
            "description" : "Date on which the credit facility application is opened",
            "format" : "date"
          },
          "approvedOverdraftLimit" : {
            "type" : "number",
            "description" : "Contains the approved overdraft limit"
          },
          "limitExpiryDate" : {
            "type" : "string",
            "description" : "This field specifies the validity of the Limit, i.e. how long is it to remain in force",
            "format" : "date"
          },
          "availableFunds" : {
            "type" : "number",
            "description" : "Total funds available in the account after all the ongoing transactions have been completed"
          },
          "outstandingOverdraftLimit" : {
            "type" : "number",
            "description" : "Indicates the outstanding overdraft limit of an account"
          },
          "onlineClearedBalance" : {
            "type" : "number",
            "description" : "Indicates the available balance allowed to use"
          },
          "openClearedBalance" : {
            "type" : "number",
            "description" : "Indicates the opening balance after clearing"
          },
          "accountWithBankBIC" : {
            "type" : "string",
            "description" : "This is the BIC code of the institution where beneficiary holds an account"
          },
          "totalPendingDepositAmount" : {
            "type" : "number",
            "description" : "Contains the total of the deposit amounts which may be available for use in near future"
          },
          "customerName" : {
            "type" : "string",
            "description" : "Indicates the name of the customer. Originator is the party who requests the payment cancellation."
          },
          "totalCredits" : {
            "type" : "string",
            "description" : "Contains the total number of credits"
          },
          "totalDebits" : {
            "type" : "string",
            "description" : "Contains the total number of debits"
          },
          "commitmentAmount" : {
            "type" : "number",
            "description" : "Indicates the total amount which will be lent or deposited for the term"
          },
          "totalPendingWithdrawalAmount" : {
            "type" : "number",
            "description" : "Contains the total withdrawal amount on hold until payment execution date"
          },
          "lockedAmount" : {
            "type" : "number",
            "description" : "Shows reserved amount for the underlying account for a given balance reservation event."
          },
          "IBAN" : {
            "type" : "string",
            "description" : "International Bank Account number, an identifier of the account. E.g. GB29 NWBK 6016 1331 9268 19"
          },
          "profitRate" : {
            "type" : "string",
            "description" : "Indicates the profit rate for the contract."
          },
          "extensions" : {
            "type" : "object",
            "properties" : { },
            "description" : "Indicates the extension data"
          }
        }
      },
      "AccountSimulationBodyAlternateIds" : {
        "type" : "object",
        "properties" : {
          "alternateIdType" : {
            "maxLength" : 10,
            "minLength" : 0,
            "type" : "string",
            "description" : "Contains the alternate account system identifier used for defining the alternate account Id"
          }
        }
      },
      "AccountBalanceMigrationBodyProperties" : {
        "type" : "object",
        "properties" : {
          "property" : {
            "maxLength" : 35,
            "minLength" : 0,
            "type" : "string",
            "description" : "Id of the product property"
          },
          "writeOffProperty" : {
            "maxLength" : 15,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the interest or account or charge property for which write off activity can be performed."
          },
          "originalPropertyAmount" : {
            "maxLength" : 18,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the original amount of a given property for a payment type."
          },
          "outstandingPropertyAmount" : {
            "maxLength" : 18,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the outstanding bill amount of a given property for a payment type."
          },
          "newPropertyAmount" : {
            "maxLength" : 19,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the oustanding amount of interest or account or charge property after bill adjustment. For write off activities, system will default zero amount in this field."
          },
          "adjustPropertyAmount" : {
            "maxLength" : 19,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the bill adjustment amount for the given property. This can be signed. Sign used to indicate the increment or decrement of the bill interest or account or charge property amount."
          },
          "amortEndDate" : {
            "maxLength" : 11,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the amortisation end date for an amortisation type of charge."
          },
          "outstandingAmortAmount" : {
            "maxLength" : 19,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the outstanding bill amount of a given property for a payment type."
          },
          "newAmortizationAmount" : {
            "maxLength" : 19,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the new charge amount which is specified during adjustment of the amortisation charge. The specified value will be the new amount outstanding and yet to be amortised."
          },
          "adjustAmortAmount" : {
            "maxLength" : 19,
            "minLength" : 0,
            "type" : "string",
            "description" : "Indicates the adjustment amount for the charge during adjustment. The new charge amount will be calculated from the unamortised amount and the adjustment amount. Either a value in this field or the new amort amount will be allowed during adjustment. The value should be given in arrangement currency."
          }
        }
      }
    },
    "securitySchemes" : {
      "apiKey" : {
        "type" : "apiKey",
        "name" : "apikey",
        "in" : "header"
      }
    }
  },
  "x-original-swagger-version" : "2.0"
}